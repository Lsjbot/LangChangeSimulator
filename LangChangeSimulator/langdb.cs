#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Langdb v1")]
public partial class LangdbV1 : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAllophone(Allophone instance);
  partial void UpdateAllophone(Allophone instance);
  partial void DeleteAllophone(Allophone instance);
  partial void InsertBibtexParameter(BibtexParameter instance);
  partial void UpdateBibtexParameter(BibtexParameter instance);
  partial void DeleteBibtexParameter(BibtexParameter instance);
  partial void InsertCountry(Country instance);
  partial void UpdateCountry(Country instance);
  partial void DeleteCountry(Country instance);
  partial void InsertEGIDS(EGIDS instance);
  partial void UpdateEGIDS(EGIDS instance);
  partial void DeleteEGIDS(EGIDS instance);
  partial void InsertFamily(Family instance);
  partial void UpdateFamily(Family instance);
  partial void DeleteFamily(Family instance);
  partial void InsertFamily_relation(Family_relation instance);
  partial void UpdateFamily_relation(Family_relation instance);
  partial void DeleteFamily_relation(Family_relation instance);
  partial void InsertInventoryBibtex(InventoryBibtex instance);
  partial void UpdateInventoryBibtex(InventoryBibtex instance);
  partial void DeleteInventoryBibtex(InventoryBibtex instance);
  partial void InsertLanguage(Language instance);
  partial void UpdateLanguage(Language instance);
  partial void DeleteLanguage(Language instance);
  partial void InsertLanguage_connection(Language_connection instance);
  partial void UpdateLanguage_connection(Language_connection instance);
  partial void DeleteLanguage_connection(Language_connection instance);
  partial void InsertLanguage_Function(Language_Function instance);
  partial void UpdateLanguage_Function(Language_Function instance);
  partial void DeleteLanguage_Function(Language_Function instance);
  partial void InsertLanguageIndex(LanguageIndex instance);
  partial void UpdateLanguageIndex(LanguageIndex instance);
  partial void DeleteLanguageIndex(LanguageIndex instance);
  partial void InsertLIC(LIC instance);
  partial void UpdateLIC(LIC instance);
  partial void DeleteLIC(LIC instance);
  partial void InsertPhoibleBibtex(PhoibleBibtex instance);
  partial void UpdatePhoibleBibtex(PhoibleBibtex instance);
  partial void DeletePhoibleBibtex(PhoibleBibtex instance);
  partial void InsertPhonemefeature(Phonemefeature instance);
  partial void UpdatePhonemefeature(Phonemefeature instance);
  partial void DeletePhonemefeature(Phonemefeature instance);
  partial void InsertPhonemeinventory(Phonemeinventory instance);
  partial void UpdatePhonemeinventory(Phonemeinventory instance);
  partial void DeletePhonemeinventory(Phonemeinventory instance);
  partial void InsertRegion(Region instance);
  partial void UpdateRegion(Region instance);
  partial void DeleteRegion(Region instance);
  partial void InsertSound(Sound instance);
  partial void UpdateSound(Sound instance);
  partial void DeleteSound(Sound instance);
  partial void InsertSoundfeature(Soundfeature instance);
  partial void UpdateSoundfeature(Soundfeature instance);
  partial void DeleteSoundfeature(Soundfeature instance);
  partial void InsertSoundininventory(Soundininventory instance);
  partial void UpdateSoundininventory(Soundininventory instance);
  partial void DeleteSoundininventory(Soundininventory instance);
  partial void InsertSwadesh_language(Swadesh_language instance);
  partial void UpdateSwadesh_language(Swadesh_language instance);
  partial void DeleteSwadesh_language(Swadesh_language instance);
  partial void InsertSwadesh_term(Swadesh_term instance);
  partial void UpdateSwadesh_term(Swadesh_term instance);
  partial void DeleteSwadesh_term(Swadesh_term instance);
  partial void InsertWALS_category(WALS_category instance);
  partial void UpdateWALS_category(WALS_category instance);
  partial void DeleteWALS_category(WALS_category instance);
  partial void InsertWALS_chapter(WALS_chapter instance);
  partial void UpdateWALS_chapter(WALS_chapter instance);
  partial void DeleteWALS_chapter(WALS_chapter instance);
  partial void InsertWALS_feature(WALS_feature instance);
  partial void UpdateWALS_feature(WALS_feature instance);
  partial void DeleteWALS_feature(WALS_feature instance);
  partial void InsertWALS_featurevalue(WALS_featurevalue instance);
  partial void UpdateWALS_featurevalue(WALS_featurevalue instance);
  partial void DeleteWALS_featurevalue(WALS_featurevalue instance);
  partial void InsertWALS_languagefeature(WALS_languagefeature instance);
  partial void UpdateWALS_languagefeature(WALS_languagefeature instance);
  partial void DeleteWALS_languagefeature(WALS_languagefeature instance);
  #endregion
	
	public LangdbV1(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LangdbV1(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LangdbV1(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LangdbV1(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Allophone> Allophone
	{
		get
		{
			return this.GetTable<Allophone>();
		}
	}
	
	public System.Data.Linq.Table<BibtexParameter> BibtexParameter
	{
		get
		{
			return this.GetTable<BibtexParameter>();
		}
	}
	
	public System.Data.Linq.Table<Country> Country
	{
		get
		{
			return this.GetTable<Country>();
		}
	}
	
	public System.Data.Linq.Table<EGIDS> EGIDS
	{
		get
		{
			return this.GetTable<EGIDS>();
		}
	}
	
	public System.Data.Linq.Table<Family> Family
	{
		get
		{
			return this.GetTable<Family>();
		}
	}
	
	public System.Data.Linq.Table<Family_relation> Family_relation
	{
		get
		{
			return this.GetTable<Family_relation>();
		}
	}
	
	public System.Data.Linq.Table<InventoryBibtex> InventoryBibtex
	{
		get
		{
			return this.GetTable<InventoryBibtex>();
		}
	}
	
	public System.Data.Linq.Table<Language> Language
	{
		get
		{
			return this.GetTable<Language>();
		}
	}
	
	public System.Data.Linq.Table<Language_connection> Language_connection
	{
		get
		{
			return this.GetTable<Language_connection>();
		}
	}
	
	public System.Data.Linq.Table<Language_Function> Language_Function
	{
		get
		{
			return this.GetTable<Language_Function>();
		}
	}
	
	public System.Data.Linq.Table<LanguageIndex> LanguageIndex
	{
		get
		{
			return this.GetTable<LanguageIndex>();
		}
	}
	
	public System.Data.Linq.Table<LIC> LIC
	{
		get
		{
			return this.GetTable<LIC>();
		}
	}
	
	public System.Data.Linq.Table<PhoibleBibtex> PhoibleBibtex
	{
		get
		{
			return this.GetTable<PhoibleBibtex>();
		}
	}
	
	public System.Data.Linq.Table<Phonemefeature> Phonemefeature
	{
		get
		{
			return this.GetTable<Phonemefeature>();
		}
	}
	
	public System.Data.Linq.Table<Phonemeinventory> Phonemeinventory
	{
		get
		{
			return this.GetTable<Phonemeinventory>();
		}
	}
	
	public System.Data.Linq.Table<Region> Region
	{
		get
		{
			return this.GetTable<Region>();
		}
	}
	
	public System.Data.Linq.Table<Sound> Sound
	{
		get
		{
			return this.GetTable<Sound>();
		}
	}
	
	public System.Data.Linq.Table<Soundfeature> Soundfeature
	{
		get
		{
			return this.GetTable<Soundfeature>();
		}
	}
	
	public System.Data.Linq.Table<Soundininventory> Soundininventory
	{
		get
		{
			return this.GetTable<Soundininventory>();
		}
	}
	
	public System.Data.Linq.Table<Swadesh_language> Swadesh_language
	{
		get
		{
			return this.GetTable<Swadesh_language>();
		}
	}
	
	public System.Data.Linq.Table<Swadesh_term> Swadesh_term
	{
		get
		{
			return this.GetTable<Swadesh_term>();
		}
	}
	
	public System.Data.Linq.Table<WALS_category> WALS_category
	{
		get
		{
			return this.GetTable<WALS_category>();
		}
	}
	
	public System.Data.Linq.Table<WALS_chapter> WALS_chapter
	{
		get
		{
			return this.GetTable<WALS_chapter>();
		}
	}
	
	public System.Data.Linq.Table<WALS_feature> WALS_feature
	{
		get
		{
			return this.GetTable<WALS_feature>();
		}
	}
	
	public System.Data.Linq.Table<WALS_featurevalue> WALS_featurevalue
	{
		get
		{
			return this.GetTable<WALS_featurevalue>();
		}
	}
	
	public System.Data.Linq.Table<WALS_languagefeature> WALS_languagefeature
	{
		get
		{
			return this.GetTable<WALS_languagefeature>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Allophone")]
public partial class Allophone : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Sound;
	
	private int _AllophoneOf;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoundChanging(int value);
    partial void OnSoundChanged();
    partial void OnAllophoneOfChanging(int value);
    partial void OnAllophoneOfChanged();
    #endregion
	
	public Allophone()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sound", DbType="Int NOT NULL")]
	public int Sound
	{
		get
		{
			return this._Sound;
		}
		set
		{
			if ((this._Sound != value))
			{
				this.OnSoundChanging(value);
				this.SendPropertyChanging();
				this._Sound = value;
				this.SendPropertyChanged("Sound");
				this.OnSoundChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllophoneOf", DbType="Int NOT NULL")]
	public int AllophoneOf
	{
		get
		{
			return this._AllophoneOf;
		}
		set
		{
			if ((this._AllophoneOf != value))
			{
				this.OnAllophoneOfChanging(value);
				this.SendPropertyChanging();
				this._AllophoneOf = value;
				this.SendPropertyChanged("AllophoneOf");
				this.OnAllophoneOfChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BibtexParameter")]
public partial class BibtexParameter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Bibtex;
	
	private string _Name;
	
	private string _Value;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBibtexChanging(string value);
    partial void OnBibtexChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
	
	public BibtexParameter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bibtex", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Bibtex
	{
		get
		{
			return this._Bibtex;
		}
		set
		{
			if ((this._Bibtex != value))
			{
				this.OnBibtexChanging(value);
				this.SendPropertyChanging();
				this._Bibtex = value;
				this.SendPropertyChanged("Bibtex");
				this.OnBibtexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Iso;
	
	private string _Name;
	
	private System.Nullable<decimal> _Diversity;
	
	private System.Nullable<int> _Included;
	
	private System.Nullable<int> _Population;
	
	private System.Nullable<int> _Sum_Of_Populations;
	
	private System.Nullable<int> _Mean;
	
	private System.Nullable<int> _Median;
	
	private System.Nullable<decimal> _Literacy_rate;
	
	private System.Nullable<int> _Conventions;
	
	private string _Region;
	
	private string _Area;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIsoChanging(string value);
    partial void OnIsoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDiversityChanging(System.Nullable<decimal> value);
    partial void OnDiversityChanged();
    partial void OnIncludedChanging(System.Nullable<int> value);
    partial void OnIncludedChanged();
    partial void OnPopulationChanging(System.Nullable<int> value);
    partial void OnPopulationChanged();
    partial void OnSum_Of_PopulationsChanging(System.Nullable<int> value);
    partial void OnSum_Of_PopulationsChanged();
    partial void OnMeanChanging(System.Nullable<int> value);
    partial void OnMeanChanged();
    partial void OnMedianChanging(System.Nullable<int> value);
    partial void OnMedianChanged();
    partial void OnLiteracy_rateChanging(System.Nullable<decimal> value);
    partial void OnLiteracy_rateChanged();
    partial void OnConventionsChanging(System.Nullable<int> value);
    partial void OnConventionsChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    #endregion
	
	public Country()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Iso
	{
		get
		{
			return this._Iso;
		}
		set
		{
			if ((this._Iso != value))
			{
				this.OnIsoChanging(value);
				this.SendPropertyChanging();
				this._Iso = value;
				this.SendPropertyChanged("Iso");
				this.OnIsoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diversity", DbType="Decimal(10,3)")]
	public System.Nullable<decimal> Diversity
	{
		get
		{
			return this._Diversity;
		}
		set
		{
			if ((this._Diversity != value))
			{
				this.OnDiversityChanging(value);
				this.SendPropertyChanging();
				this._Diversity = value;
				this.SendPropertyChanged("Diversity");
				this.OnDiversityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Included", DbType="Int")]
	public System.Nullable<int> Included
	{
		get
		{
			return this._Included;
		}
		set
		{
			if ((this._Included != value))
			{
				this.OnIncludedChanging(value);
				this.SendPropertyChanging();
				this._Included = value;
				this.SendPropertyChanged("Included");
				this.OnIncludedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int")]
	public System.Nullable<int> Population
	{
		get
		{
			return this._Population;
		}
		set
		{
			if ((this._Population != value))
			{
				this.OnPopulationChanging(value);
				this.SendPropertyChanging();
				this._Population = value;
				this.SendPropertyChanged("Population");
				this.OnPopulationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum_Of_Populations", DbType="Int")]
	public System.Nullable<int> Sum_Of_Populations
	{
		get
		{
			return this._Sum_Of_Populations;
		}
		set
		{
			if ((this._Sum_Of_Populations != value))
			{
				this.OnSum_Of_PopulationsChanging(value);
				this.SendPropertyChanging();
				this._Sum_Of_Populations = value;
				this.SendPropertyChanged("Sum_Of_Populations");
				this.OnSum_Of_PopulationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mean", DbType="Int")]
	public System.Nullable<int> Mean
	{
		get
		{
			return this._Mean;
		}
		set
		{
			if ((this._Mean != value))
			{
				this.OnMeanChanging(value);
				this.SendPropertyChanging();
				this._Mean = value;
				this.SendPropertyChanged("Mean");
				this.OnMeanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Median", DbType="Int")]
	public System.Nullable<int> Median
	{
		get
		{
			return this._Median;
		}
		set
		{
			if ((this._Median != value))
			{
				this.OnMedianChanging(value);
				this.SendPropertyChanging();
				this._Median = value;
				this.SendPropertyChanged("Median");
				this.OnMedianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Literacy_rate", DbType="Decimal(10,3)")]
	public System.Nullable<decimal> Literacy_rate
	{
		get
		{
			return this._Literacy_rate;
		}
		set
		{
			if ((this._Literacy_rate != value))
			{
				this.OnLiteracy_rateChanging(value);
				this.SendPropertyChanging();
				this._Literacy_rate = value;
				this.SendPropertyChanged("Literacy_rate");
				this.OnLiteracy_rateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conventions", DbType="Int")]
	public System.Nullable<int> Conventions
	{
		get
		{
			return this._Conventions;
		}
		set
		{
			if ((this._Conventions != value))
			{
				this.OnConventionsChanging(value);
				this.SendPropertyChanging();
				this._Conventions = value;
				this.SendPropertyChanged("Conventions");
				this.OnConventionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="Char(3)")]
	public string Region
	{
		get
		{
			return this._Region;
		}
		set
		{
			if ((this._Region != value))
			{
				this.OnRegionChanging(value);
				this.SendPropertyChanging();
				this._Region = value;
				this.SendPropertyChanged("Region");
				this.OnRegionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(8)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EGIDS")]
public partial class EGIDS : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public EGIDS()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Fullstring;
	
	private System.Nullable<int> _L1_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullstringChanging(string value);
    partial void OnFullstringChanged();
    partial void OnL1_UsersChanging(System.Nullable<int> value);
    partial void OnL1_UsersChanged();
    #endregion
	
	public Family()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullstring", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
	public string Fullstring
	{
		get
		{
			return this._Fullstring;
		}
		set
		{
			if ((this._Fullstring != value))
			{
				this.OnFullstringChanging(value);
				this.SendPropertyChanging();
				this._Fullstring = value;
				this.SendPropertyChanged("Fullstring");
				this.OnFullstringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1_Users", DbType="Int")]
	public System.Nullable<int> L1_Users
	{
		get
		{
			return this._L1_Users;
		}
		set
		{
			if ((this._L1_Users != value))
			{
				this.OnL1_UsersChanging(value);
				this.SendPropertyChanging();
				this._L1_Users = value;
				this.SendPropertyChanged("L1_Users");
				this.OnL1_UsersChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family_relation")]
public partial class Family_relation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Up;
	
	private int _Down;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUpChanging(int value);
    partial void OnUpChanged();
    partial void OnDownChanging(int value);
    partial void OnDownChanged();
    #endregion
	
	public Family_relation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Up", DbType="Int NOT NULL")]
	public int Up
	{
		get
		{
			return this._Up;
		}
		set
		{
			if ((this._Up != value))
			{
				this.OnUpChanging(value);
				this.SendPropertyChanging();
				this._Up = value;
				this.SendPropertyChanged("Up");
				this.OnUpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Down", DbType="Int NOT NULL")]
	public int Down
	{
		get
		{
			return this._Down;
		}
		set
		{
			if ((this._Down != value))
			{
				this.OnDownChanging(value);
				this.SendPropertyChanging();
				this._Down = value;
				this.SendPropertyChanged("Down");
				this.OnDownChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryBibtex")]
public partial class InventoryBibtex : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Inventory;
	
	private string _Bibtex;
	
	private string _Source;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInventoryChanging(int value);
    partial void OnInventoryChanged();
    partial void OnBibtexChanging(string value);
    partial void OnBibtexChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
	
	public InventoryBibtex()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Int NOT NULL")]
	public int Inventory
	{
		get
		{
			return this._Inventory;
		}
		set
		{
			if ((this._Inventory != value))
			{
				this.OnInventoryChanging(value);
				this.SendPropertyChanging();
				this._Inventory = value;
				this.SendPropertyChanged("Inventory");
				this.OnInventoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bibtex", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Bibtex
	{
		get
		{
			return this._Bibtex;
		}
		set
		{
			if ((this._Bibtex != value))
			{
				this.OnBibtexChanging(value);
				this.SendPropertyChanging();
				this._Bibtex = value;
				this.SendPropertyChanged("Bibtex");
				this.OnBibtexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(10)")]
	public string Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language")]
public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Iso;
	
	private string _Name;
	
	private string _Uninverted_name;
	
	private string _Country;
	
	private string _Region;
	
	private string _Area;
	
	private System.Nullable<int> _L1_Users;
	
	private System.Nullable<int> _All_Users;
	
	private System.Nullable<int> _Family_top;
	
	private System.Nullable<int> _Family_near;
	
	private System.Nullable<decimal> _Latitude;
	
	private System.Nullable<decimal> _Longitude;
	
	private string _EGIDS;
	
	private System.Nullable<bool> _Is_Written;
	
	private string _WALS_code;
	
	private string _Glottocode;
	
	private string _Iso2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIsoChanging(string value);
    partial void OnIsoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUninverted_nameChanging(string value);
    partial void OnUninverted_nameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnL1_UsersChanging(System.Nullable<int> value);
    partial void OnL1_UsersChanged();
    partial void OnAll_UsersChanging(System.Nullable<int> value);
    partial void OnAll_UsersChanged();
    partial void OnFamily_topChanging(System.Nullable<int> value);
    partial void OnFamily_topChanged();
    partial void OnFamily_nearChanging(System.Nullable<int> value);
    partial void OnFamily_nearChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnEGIDSChanging(string value);
    partial void OnEGIDSChanged();
    partial void OnIs_WrittenChanging(System.Nullable<bool> value);
    partial void OnIs_WrittenChanged();
    partial void OnWALS_codeChanging(string value);
    partial void OnWALS_codeChanged();
    partial void OnGlottocodeChanging(string value);
    partial void OnGlottocodeChanged();
    partial void OnIso2Changing(string value);
    partial void OnIso2Changed();
    #endregion
	
	public Language()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Iso
	{
		get
		{
			return this._Iso;
		}
		set
		{
			if ((this._Iso != value))
			{
				this.OnIsoChanging(value);
				this.SendPropertyChanging();
				this._Iso = value;
				this.SendPropertyChanged("Iso");
				this.OnIsoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uninverted_name", DbType="VarChar(50)")]
	public string Uninverted_name
	{
		get
		{
			return this._Uninverted_name;
		}
		set
		{
			if ((this._Uninverted_name != value))
			{
				this.OnUninverted_nameChanging(value);
				this.SendPropertyChanging();
				this._Uninverted_name = value;
				this.SendPropertyChanged("Uninverted_name");
				this.OnUninverted_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="Char(2)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="Char(3)")]
	public string Region
	{
		get
		{
			return this._Region;
		}
		set
		{
			if ((this._Region != value))
			{
				this.OnRegionChanging(value);
				this.SendPropertyChanging();
				this._Region = value;
				this.SendPropertyChanged("Region");
				this.OnRegionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(8)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1_Users", DbType="Int")]
	public System.Nullable<int> L1_Users
	{
		get
		{
			return this._L1_Users;
		}
		set
		{
			if ((this._L1_Users != value))
			{
				this.OnL1_UsersChanging(value);
				this.SendPropertyChanging();
				this._L1_Users = value;
				this.SendPropertyChanged("L1_Users");
				this.OnL1_UsersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_All_Users", DbType="Int")]
	public System.Nullable<int> All_Users
	{
		get
		{
			return this._All_Users;
		}
		set
		{
			if ((this._All_Users != value))
			{
				this.OnAll_UsersChanging(value);
				this.SendPropertyChanging();
				this._All_Users = value;
				this.SendPropertyChanged("All_Users");
				this.OnAll_UsersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family_top", DbType="Int")]
	public System.Nullable<int> Family_top
	{
		get
		{
			return this._Family_top;
		}
		set
		{
			if ((this._Family_top != value))
			{
				this.OnFamily_topChanging(value);
				this.SendPropertyChanging();
				this._Family_top = value;
				this.SendPropertyChanged("Family_top");
				this.OnFamily_topChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family_near", DbType="Int")]
	public System.Nullable<int> Family_near
	{
		get
		{
			return this._Family_near;
		}
		set
		{
			if ((this._Family_near != value))
			{
				this.OnFamily_nearChanging(value);
				this.SendPropertyChanging();
				this._Family_near = value;
				this.SendPropertyChanged("Family_near");
				this.OnFamily_nearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(12,6)")]
	public System.Nullable<decimal> Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(12,6)")]
	public System.Nullable<decimal> Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EGIDS", DbType="VarChar(3)")]
	public string EGIDS
	{
		get
		{
			return this._EGIDS;
		}
		set
		{
			if ((this._EGIDS != value))
			{
				this.OnEGIDSChanging(value);
				this.SendPropertyChanging();
				this._EGIDS = value;
				this.SendPropertyChanged("EGIDS");
				this.OnEGIDSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Written", DbType="Bit")]
	public System.Nullable<bool> Is_Written
	{
		get
		{
			return this._Is_Written;
		}
		set
		{
			if ((this._Is_Written != value))
			{
				this.OnIs_WrittenChanging(value);
				this.SendPropertyChanging();
				this._Is_Written = value;
				this.SendPropertyChanged("Is_Written");
				this.OnIs_WrittenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WALS_code", DbType="Char(3)")]
	public string WALS_code
	{
		get
		{
			return this._WALS_code;
		}
		set
		{
			if ((this._WALS_code != value))
			{
				this.OnWALS_codeChanging(value);
				this.SendPropertyChanging();
				this._WALS_code = value;
				this.SendPropertyChanged("WALS_code");
				this.OnWALS_codeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="glottocode", Storage="_Glottocode", DbType="Char(8)")]
	public string Glottocode
	{
		get
		{
			return this._Glottocode;
		}
		set
		{
			if ((this._Glottocode != value))
			{
				this.OnGlottocodeChanging(value);
				this.SendPropertyChanging();
				this._Glottocode = value;
				this.SendPropertyChanged("Glottocode");
				this.OnGlottocodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso2", DbType="Char(2)")]
	public string Iso2
	{
		get
		{
			return this._Iso2;
		}
		set
		{
			if ((this._Iso2 != value))
			{
				this.OnIso2Changing(value);
				this.SendPropertyChanging();
				this._Iso2 = value;
				this.SendPropertyChanged("Iso2");
				this.OnIso2Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language_connection")]
public partial class Language_connection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Mainlanguage;
	
	private string _Sublanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMainlanguageChanging(string value);
    partial void OnMainlanguageChanged();
    partial void OnSublanguageChanging(string value);
    partial void OnSublanguageChanged();
    #endregion
	
	public Language_connection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mainlanguage", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Mainlanguage
	{
		get
		{
			return this._Mainlanguage;
		}
		set
		{
			if ((this._Mainlanguage != value))
			{
				this.OnMainlanguageChanging(value);
				this.SendPropertyChanging();
				this._Mainlanguage = value;
				this.SendPropertyChanged("Mainlanguage");
				this.OnMainlanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sublanguage", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Sublanguage
	{
		get
		{
			return this._Sublanguage;
		}
		set
		{
			if ((this._Sublanguage != value))
			{
				this.OnSublanguageChanging(value);
				this.SendPropertyChanging();
				this._Sublanguage = value;
				this.SendPropertyChanged("Sublanguage");
				this.OnSublanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Language_Function")]
public partial class Language_Function : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Function_Code;
	
	private string _Function_Label;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFunction_CodeChanging(string value);
    partial void OnFunction_CodeChanged();
    partial void OnFunction_LabelChanging(string value);
    partial void OnFunction_LabelChanged();
    #endregion
	
	public Language_Function()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Function_Code
	{
		get
		{
			return this._Function_Code;
		}
		set
		{
			if ((this._Function_Code != value))
			{
				this.OnFunction_CodeChanging(value);
				this.SendPropertyChanging();
				this._Function_Code = value;
				this.SendPropertyChanged("Function_Code");
				this.OnFunction_CodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function_Label", DbType="VarChar(42) NOT NULL", CanBeNull=false)]
	public string Function_Label
	{
		get
		{
			return this._Function_Label;
		}
		set
		{
			if ((this._Function_Label != value))
			{
				this.OnFunction_LabelChanging(value);
				this.SendPropertyChanging();
				this._Function_Label = value;
				this.SendPropertyChanged("Function_Label");
				this.OnFunction_LabelChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageIndex")]
public partial class LanguageIndex : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Country;
	
	private string _Language;
	
	private string _NameType;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnNameTypeChanging(string value);
    partial void OnNameTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public LanguageIndex()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameType", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string NameType
	{
		get
		{
			return this._NameType;
		}
		set
		{
			if ((this._NameType != value))
			{
				this.OnNameTypeChanging(value);
				this.SendPropertyChanging();
				this._NameType = value;
				this.SendPropertyChanged("NameType");
				this.OnNameTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIC")]
public partial class LIC : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Country;
	
	private string _Language;
	
	private string _Name;
	
	private string _Uninverted_name;
	
	private System.Nullable<bool> _Is_Primary;
	
	private System.Nullable<bool> _Is_Indigenous;
	
	private System.Nullable<bool> _Is_Established;
	
	private System.Nullable<int> _L1_Users;
	
	private System.Nullable<int> _L2_Users;
	
	private string _EGIDS;
	
	private string _Function_Code;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUninverted_nameChanging(string value);
    partial void OnUninverted_nameChanged();
    partial void OnIs_PrimaryChanging(System.Nullable<bool> value);
    partial void OnIs_PrimaryChanged();
    partial void OnIs_IndigenousChanging(System.Nullable<bool> value);
    partial void OnIs_IndigenousChanged();
    partial void OnIs_EstablishedChanging(System.Nullable<bool> value);
    partial void OnIs_EstablishedChanged();
    partial void OnL1_UsersChanging(System.Nullable<int> value);
    partial void OnL1_UsersChanged();
    partial void OnL2_UsersChanging(System.Nullable<int> value);
    partial void OnL2_UsersChanged();
    partial void OnEGIDSChanging(string value);
    partial void OnEGIDSChanged();
    partial void OnFunction_CodeChanging(string value);
    partial void OnFunction_CodeChanged();
    #endregion
	
	public LIC()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uninverted_name", DbType="VarChar(50)")]
	public string Uninverted_name
	{
		get
		{
			return this._Uninverted_name;
		}
		set
		{
			if ((this._Uninverted_name != value))
			{
				this.OnUninverted_nameChanging(value);
				this.SendPropertyChanging();
				this._Uninverted_name = value;
				this.SendPropertyChanged("Uninverted_name");
				this.OnUninverted_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Primary", DbType="Bit")]
	public System.Nullable<bool> Is_Primary
	{
		get
		{
			return this._Is_Primary;
		}
		set
		{
			if ((this._Is_Primary != value))
			{
				this.OnIs_PrimaryChanging(value);
				this.SendPropertyChanging();
				this._Is_Primary = value;
				this.SendPropertyChanged("Is_Primary");
				this.OnIs_PrimaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Indigenous", DbType="Bit")]
	public System.Nullable<bool> Is_Indigenous
	{
		get
		{
			return this._Is_Indigenous;
		}
		set
		{
			if ((this._Is_Indigenous != value))
			{
				this.OnIs_IndigenousChanging(value);
				this.SendPropertyChanging();
				this._Is_Indigenous = value;
				this.SendPropertyChanged("Is_Indigenous");
				this.OnIs_IndigenousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Established", DbType="Bit")]
	public System.Nullable<bool> Is_Established
	{
		get
		{
			return this._Is_Established;
		}
		set
		{
			if ((this._Is_Established != value))
			{
				this.OnIs_EstablishedChanging(value);
				this.SendPropertyChanging();
				this._Is_Established = value;
				this.SendPropertyChanged("Is_Established");
				this.OnIs_EstablishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1_Users", DbType="Int")]
	public System.Nullable<int> L1_Users
	{
		get
		{
			return this._L1_Users;
		}
		set
		{
			if ((this._L1_Users != value))
			{
				this.OnL1_UsersChanging(value);
				this.SendPropertyChanging();
				this._L1_Users = value;
				this.SendPropertyChanged("L1_Users");
				this.OnL1_UsersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2_Users", DbType="Int")]
	public System.Nullable<int> L2_Users
	{
		get
		{
			return this._L2_Users;
		}
		set
		{
			if ((this._L2_Users != value))
			{
				this.OnL2_UsersChanging(value);
				this.SendPropertyChanging();
				this._L2_Users = value;
				this.SendPropertyChanged("L2_Users");
				this.OnL2_UsersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EGIDS", DbType="VarChar(3)")]
	public string EGIDS
	{
		get
		{
			return this._EGIDS;
		}
		set
		{
			if ((this._EGIDS != value))
			{
				this.OnEGIDSChanging(value);
				this.SendPropertyChanging();
				this._EGIDS = value;
				this.SendPropertyChanged("EGIDS");
				this.OnEGIDSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function_Code", DbType="Char(3)")]
	public string Function_Code
	{
		get
		{
			return this._Function_Code;
		}
		set
		{
			if ((this._Function_Code != value))
			{
				this.OnFunction_CodeChanging(value);
				this.SendPropertyChanging();
				this._Function_Code = value;
				this.SendPropertyChanged("Function_Code");
				this.OnFunction_CodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoibleBibtex")]
public partial class PhoibleBibtex : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _BibtexKey;
	
	private string _BibtexType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBibtexKeyChanging(string value);
    partial void OnBibtexKeyChanged();
    partial void OnBibtexTypeChanging(string value);
    partial void OnBibtexTypeChanged();
    #endregion
	
	public PhoibleBibtex()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibtexKey", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string BibtexKey
	{
		get
		{
			return this._BibtexKey;
		}
		set
		{
			if ((this._BibtexKey != value))
			{
				this.OnBibtexKeyChanging(value);
				this.SendPropertyChanging();
				this._BibtexKey = value;
				this.SendPropertyChanged("BibtexKey");
				this.OnBibtexKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BibtexType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string BibtexType
	{
		get
		{
			return this._BibtexType;
		}
		set
		{
			if ((this._BibtexType != value))
			{
				this.OnBibtexTypeChanging(value);
				this.SendPropertyChanging();
				this._BibtexType = value;
				this.SendPropertyChanged("BibtexType");
				this.OnBibtexTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phonemefeature")]
public partial class Phonemefeature : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Abbrev;
	
	private System.Nullable<int> _Category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAbbrevChanging(string value);
    partial void OnAbbrevChanged();
    partial void OnCategoryChanging(System.Nullable<int> value);
    partial void OnCategoryChanged();
    #endregion
	
	public Phonemefeature()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbrev", DbType="VarChar(20)")]
	public string Abbrev
	{
		get
		{
			return this._Abbrev;
		}
		set
		{
			if ((this._Abbrev != value))
			{
				this.OnAbbrevChanging(value);
				this.SendPropertyChanging();
				this._Abbrev = value;
				this.SendPropertyChanged("Abbrev");
				this.OnAbbrevChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
	public System.Nullable<int> Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phonemeinventory")]
public partial class Phonemeinventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Language;
	
	private string _Dialect;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnDialectChanging(string value);
    partial void OnDialectChanged();
    #endregion
	
	public Phonemeinventory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dialect", DbType="VarChar(200)")]
	public string Dialect
	{
		get
		{
			return this._Dialect;
		}
		set
		{
			if ((this._Dialect != value))
			{
				this.OnDialectChanging(value);
				this.SendPropertyChanging();
				this._Dialect = value;
				this.SendPropertyChanged("Dialect");
				this.OnDialectChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Code;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public Region()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sound")]
public partial class Sound : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _IPA;
	
	private string _Description;
	
	private string _Featurestring;
	
	private string _Class;
	
	private string _CombinedClass;
	
	private System.Nullable<int> _NumOfCombinedGlyphs;
	
	private string _GlyphID;
	
	private System.Nullable<bool> _Trump;
	
	private string _Source;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIPAChanging(string value);
    partial void OnIPAChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFeaturestringChanging(string value);
    partial void OnFeaturestringChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnCombinedClassChanging(string value);
    partial void OnCombinedClassChanged();
    partial void OnNumOfCombinedGlyphsChanging(System.Nullable<int> value);
    partial void OnNumOfCombinedGlyphsChanged();
    partial void OnGlyphIDChanging(string value);
    partial void OnGlyphIDChanged();
    partial void OnTrumpChanging(System.Nullable<bool> value);
    partial void OnTrumpChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
	
	public Sound()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPA", DbType="NVarChar(15)")]
	public string IPA
	{
		get
		{
			return this._IPA;
		}
		set
		{
			if ((this._IPA != value))
			{
				this.OnIPAChanging(value);
				this.SendPropertyChanging();
				this._IPA = value;
				this.SendPropertyChanged("IPA");
				this.OnIPAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(40)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featurestring", DbType="VarChar(40)")]
	public string Featurestring
	{
		get
		{
			return this._Featurestring;
		}
		set
		{
			if ((this._Featurestring != value))
			{
				this.OnFeaturestringChanging(value);
				this.SendPropertyChanging();
				this._Featurestring = value;
				this.SendPropertyChanged("Featurestring");
				this.OnFeaturestringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="Char(1)")]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombinedClass", DbType="VarChar(10)")]
	public string CombinedClass
	{
		get
		{
			return this._CombinedClass;
		}
		set
		{
			if ((this._CombinedClass != value))
			{
				this.OnCombinedClassChanging(value);
				this.SendPropertyChanging();
				this._CombinedClass = value;
				this.SendPropertyChanged("CombinedClass");
				this.OnCombinedClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfCombinedGlyphs", DbType="Int")]
	public System.Nullable<int> NumOfCombinedGlyphs
	{
		get
		{
			return this._NumOfCombinedGlyphs;
		}
		set
		{
			if ((this._NumOfCombinedGlyphs != value))
			{
				this.OnNumOfCombinedGlyphsChanging(value);
				this.SendPropertyChanging();
				this._NumOfCombinedGlyphs = value;
				this.SendPropertyChanged("NumOfCombinedGlyphs");
				this.OnNumOfCombinedGlyphsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlyphID", DbType="VarChar(70)")]
	public string GlyphID
	{
		get
		{
			return this._GlyphID;
		}
		set
		{
			if ((this._GlyphID != value))
			{
				this.OnGlyphIDChanging(value);
				this.SendPropertyChanging();
				this._GlyphID = value;
				this.SendPropertyChanged("GlyphID");
				this.OnGlyphIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trump", DbType="Bit")]
	public System.Nullable<bool> Trump
	{
		get
		{
			return this._Trump;
		}
		set
		{
			if ((this._Trump != value))
			{
				this.OnTrumpChanging(value);
				this.SendPropertyChanging();
				this._Trump = value;
				this.SendPropertyChanged("Trump");
				this.OnTrumpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(10)")]
	public string Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Soundfeature")]
public partial class Soundfeature : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Sound;
	
	private int _Feature;
	
	private string _Value;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSoundChanging(int value);
    partial void OnSoundChanged();
    partial void OnFeatureChanging(int value);
    partial void OnFeatureChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
	
	public Soundfeature()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sound", DbType="Int NOT NULL")]
	public int Sound
	{
		get
		{
			return this._Sound;
		}
		set
		{
			if ((this._Sound != value))
			{
				this.OnSoundChanging(value);
				this.SendPropertyChanging();
				this._Sound = value;
				this.SendPropertyChanged("Sound");
				this.OnSoundChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="Int NOT NULL")]
	public int Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Char(1)")]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Soundininventory")]
public partial class Soundininventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Inventory;
	
	private int _Sound;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInventoryChanging(int value);
    partial void OnInventoryChanged();
    partial void OnSoundChanging(int value);
    partial void OnSoundChanged();
    #endregion
	
	public Soundininventory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Int NOT NULL")]
	public int Inventory
	{
		get
		{
			return this._Inventory;
		}
		set
		{
			if ((this._Inventory != value))
			{
				this.OnInventoryChanging(value);
				this.SendPropertyChanging();
				this._Inventory = value;
				this.SendPropertyChanged("Inventory");
				this.OnInventoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sound", DbType="Int NOT NULL")]
	public int Sound
	{
		get
		{
			return this._Sound;
		}
		set
		{
			if ((this._Sound != value))
			{
				this.OnSoundChanging(value);
				this.SendPropertyChanging();
				this._Sound = value;
				this.SendPropertyChanged("Sound");
				this.OnSoundChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Swadesh_language")]
public partial class Swadesh_language : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Term;
	
	private string _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTermChanging(int value);
    partial void OnTermChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
	
	public Swadesh_language()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int NOT NULL")]
	public int Term
	{
		get
		{
			return this._Term;
		}
		set
		{
			if ((this._Term != value))
			{
				this.OnTermChanging(value);
				this.SendPropertyChanging();
				this._Term = value;
				this.SendPropertyChanged("Term");
				this.OnTermChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Swadesh_term")]
public partial class Swadesh_term : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public Swadesh_term()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALS_category")]
public partial class WALS_category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public WALS_category()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALS_chapter")]
public partial class WALS_chapter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Author;
	
	private string _Category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
	
	public WALS_chapter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALS_feature")]
public partial class WALS_feature : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private int _Chapter;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChapterChanging(int value);
    partial void OnChapterChanged();
    #endregion
	
	public WALS_feature()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chapter", DbType="Int NOT NULL")]
	public int Chapter
	{
		get
		{
			return this._Chapter;
		}
		set
		{
			if ((this._Chapter != value))
			{
				this.OnChapterChanging(value);
				this.SendPropertyChanging();
				this._Chapter = value;
				this.SendPropertyChanged("Chapter");
				this.OnChapterChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALS_featurevalue")]
public partial class WALS_featurevalue : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private System.Nullable<int> _Number;
	
	private int _Feature;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnFeatureChanging(int value);
    partial void OnFeatureChanged();
    #endregion
	
	public WALS_featurevalue()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
	public System.Nullable<int> Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="Int NOT NULL")]
	public int Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WALS_languagefeature")]
public partial class WALS_languagefeature : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Feature;
	
	private string _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFeatureChanging(int value);
    partial void OnFeatureChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
	
	public WALS_languagefeature()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="Int NOT NULL")]
	public int Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(3) NOT NULL", CanBeNull=false)]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
