#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class CLICS3 : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBorrowingTable(BorrowingTable instance);
  partial void UpdateBorrowingTable(BorrowingTable instance);
  partial void DeleteBorrowingTable(BorrowingTable instance);
  partial void InsertCodedFormTable(CodedFormTable instance);
  partial void UpdateCodedFormTable(CodedFormTable instance);
  partial void DeleteCodedFormTable(CodedFormTable instance);
  partial void InsertCognateTable(CognateTable instance);
  partial void UpdateCognateTable(CognateTable instance);
  partial void DeleteCognateTable(CognateTable instance);
  partial void InsertColexForm(ColexForm instance);
  partial void UpdateColexForm(ColexForm instance);
  partial void DeleteColexForm(ColexForm instance);
  partial void InsertColexTable(ColexTable instance);
  partial void UpdateColexTable(ColexTable instance);
  partial void DeleteColexTable(ColexTable instance);
  partial void InsertConcepticonLink(ConcepticonLink instance);
  partial void UpdateConcepticonLink(ConcepticonLink instance);
  partial void DeleteConcepticonLink(ConcepticonLink instance);
  partial void InsertConcepticonTable(ConcepticonTable instance);
  partial void UpdateConcepticonTable(ConcepticonTable instance);
  partial void DeleteConcepticonTable(ConcepticonTable instance);
  partial void InsertDataset(Dataset instance);
  partial void UpdateDataset(Dataset instance);
  partial void DeleteDataset(Dataset instance);
  partial void InsertDatasetmeta(Datasetmeta instance);
  partial void UpdateDatasetmeta(Datasetmeta instance);
  partial void DeleteDatasetmeta(Datasetmeta instance);
  partial void InsertFormTable(FormTable instance);
  partial void UpdateFormTable(FormTable instance);
  partial void DeleteFormTable(FormTable instance);
  partial void InsertLanguageTable(LanguageTable instance);
  partial void UpdateLanguageTable(LanguageTable instance);
  partial void DeleteLanguageTable(LanguageTable instance);
  partial void InsertLanguageTable2(LanguageTable2 instance);
  partial void UpdateLanguageTable2(LanguageTable2 instance);
  partial void DeleteLanguageTable2(LanguageTable2 instance);
  partial void InsertLinkLanguage(LinkLanguage instance);
  partial void UpdateLinkLanguage(LinkLanguage instance);
  partial void DeleteLinkLanguage(LinkLanguage instance);
  partial void InsertParameterTable(ParameterTable instance);
  partial void UpdateParameterTable(ParameterTable instance);
  partial void DeleteParameterTable(ParameterTable instance);
  partial void InsertRandomwalkLink(RandomwalkLink instance);
  partial void UpdateRandomwalkLink(RandomwalkLink instance);
  partial void DeleteRandomwalkLink(RandomwalkLink instance);
  partial void InsertSourceTable(SourceTable instance);
  partial void UpdateSourceTable(SourceTable instance);
  partial void DeleteSourceTable(SourceTable instance);
  partial void InsertValueTable(ValueTable instance);
  partial void UpdateValueTable(ValueTable instance);
  partial void DeleteValueTable(ValueTable instance);
  #endregion
	
	public CLICS3(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CLICS3(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CLICS3(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CLICS3(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<BorrowingSource> BorrowingSource
	{
		get
		{
			return this.GetTable<BorrowingSource>();
		}
	}
	
	public System.Data.Linq.Table<BorrowingTable> BorrowingTable
	{
		get
		{
			return this.GetTable<BorrowingTable>();
		}
	}
	
	public System.Data.Linq.Table<CodedFormTable> CodedFormTable
	{
		get
		{
			return this.GetTable<CodedFormTable>();
		}
	}
	
	public System.Data.Linq.Table<CognateSource> CognateSource
	{
		get
		{
			return this.GetTable<CognateSource>();
		}
	}
	
	public System.Data.Linq.Table<CognateTable> CognateTable
	{
		get
		{
			return this.GetTable<CognateTable>();
		}
	}
	
	public System.Data.Linq.Table<ColexForm> ColexForm
	{
		get
		{
			return this.GetTable<ColexForm>();
		}
	}
	
	public System.Data.Linq.Table<ColexTable> ColexTable
	{
		get
		{
			return this.GetTable<ColexTable>();
		}
	}
	
	public System.Data.Linq.Table<ConcepticonLink> ConcepticonLink
	{
		get
		{
			return this.GetTable<ConcepticonLink>();
		}
	}
	
	public System.Data.Linq.Table<ConcepticonTable> ConcepticonTable
	{
		get
		{
			return this.GetTable<ConcepticonTable>();
		}
	}
	
	public System.Data.Linq.Table<Dataset> Dataset
	{
		get
		{
			return this.GetTable<Dataset>();
		}
	}
	
	public System.Data.Linq.Table<Datasetmeta> Datasetmeta
	{
		get
		{
			return this.GetTable<Datasetmeta>();
		}
	}
	
	public System.Data.Linq.Table<FormSource> FormSource
	{
		get
		{
			return this.GetTable<FormSource>();
		}
	}
	
	public System.Data.Linq.Table<FormTable> FormTable
	{
		get
		{
			return this.GetTable<FormTable>();
		}
	}
	
	public System.Data.Linq.Table<LanguageTable> LanguageTable
	{
		get
		{
			return this.GetTable<LanguageTable>();
		}
	}
	
	public System.Data.Linq.Table<LanguageTable2> LanguageTable2
	{
		get
		{
			return this.GetTable<LanguageTable2>();
		}
	}
	
	public System.Data.Linq.Table<LinkLanguage> LinkLanguage
	{
		get
		{
			return this.GetTable<LinkLanguage>();
		}
	}
	
	public System.Data.Linq.Table<ParameterTable> ParameterTable
	{
		get
		{
			return this.GetTable<ParameterTable>();
		}
	}
	
	public System.Data.Linq.Table<RandomwalkLink> RandomwalkLink
	{
		get
		{
			return this.GetTable<RandomwalkLink>();
		}
	}
	
	public System.Data.Linq.Table<SourceTable> SourceTable
	{
		get
		{
			return this.GetTable<SourceTable>();
		}
	}
	
	public System.Data.Linq.Table<ValueSource> ValueSource
	{
		get
		{
			return this.GetTable<ValueSource>();
		}
	}
	
	public System.Data.Linq.Table<ValueTable> ValueTable
	{
		get
		{
			return this.GetTable<ValueTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowingSource")]
public partial class BorrowingSource
{
	
	private string _Borrowing_ID;
	
	private string _Source_ID;
	
	private string _Context;
	
	private string _Dataset_ID;
	
	public BorrowingSource()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrowing_ID", DbType="NVarChar(100)")]
	public string Borrowing_ID
	{
		get
		{
			return this._Borrowing_ID;
		}
		set
		{
			if ((this._Borrowing_ID != value))
			{
				this._Borrowing_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="NVarChar(100)")]
	public string Source_ID
	{
		get
		{
			return this._Source_ID;
		}
		set
		{
			if ((this._Source_ID != value))
			{
				this._Source_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Context
	{
		get
		{
			return this._Context;
		}
		set
		{
			if ((this._Context != value))
			{
				this._Context = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this._Dataset_ID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowingTable")]
public partial class BorrowingTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Form_ID_Target;
	
	private string _Form_ID_Source;
	
	private string _Comment;
	
	private System.Nullable<int> _Status;
	
	private string _Dataset_ID;
	
	private EntityRef<Dataset> _Dataset;
	
	private EntityRef<FormTable> _FormTable;
	
	private EntityRef<FormTable> @__BorrowingTable__308E3499;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnForm_ID_TargetChanging(string value);
    partial void OnForm_ID_TargetChanged();
    partial void OnForm_ID_SourceChanging(string value);
    partial void OnForm_ID_SourceChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    #endregion
	
	public BorrowingTable()
	{
		this._Dataset = default(EntityRef<Dataset>);
		this._FormTable = default(EntityRef<FormTable>);
		this.@__BorrowingTable__308E3499 = default(EntityRef<FormTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_ID_Target", DbType="NVarChar(100)")]
	public string Form_ID_Target
	{
		get
		{
			return this._Form_ID_Target;
		}
		set
		{
			if ((this._Form_ID_Target != value))
			{
				if (this._FormTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnForm_ID_TargetChanging(value);
				this.SendPropertyChanging();
				this._Form_ID_Target = value;
				this.SendPropertyChanged("Form_ID_Target");
				this.OnForm_ID_TargetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_ID_Source", DbType="NVarChar(100)")]
	public string Form_ID_Source
	{
		get
		{
			return this._Form_ID_Source;
		}
		set
		{
			if ((this._Form_ID_Source != value))
			{
				if (this.@__BorrowingTable__308E3499.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnForm_ID_SourceChanging(value);
				this.SendPropertyChanging();
				this._Form_ID_Source = value;
				this.SendPropertyChanged("Form_ID_Source");
				this.OnForm_ID_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Borrowing__datas__2EA5EC27", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.BorrowingTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.BorrowingTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BorrowingTable__2F9A1060", Storage="_FormTable", ThisKey="Dataset_ID,Form_ID_Target", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public FormTable FormTable
	{
		get
		{
			return this._FormTable.Entity;
		}
		set
		{
			FormTable previousValue = this._FormTable.Entity;
			if (((previousValue != value) 
						|| (this._FormTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FormTable.Entity = null;
					previousValue.BorrowingTable.Remove(this);
				}
				this._FormTable.Entity = value;
				if ((value != null))
				{
					value.BorrowingTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Form_ID_Target = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Form_ID_Target = default(string);
				}
				this.SendPropertyChanged("FormTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BorrowingTable__308E3499", Storage="__BorrowingTable__308E3499", ThisKey="Dataset_ID,Form_ID_Source", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public FormTable _BorrowingTable__308E3499
	{
		get
		{
			return this.@__BorrowingTable__308E3499.Entity;
		}
		set
		{
			FormTable previousValue = this.@__BorrowingTable__308E3499.Entity;
			if (((previousValue != value) 
						|| (this.@__BorrowingTable__308E3499.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this.@__BorrowingTable__308E3499.Entity = null;
					previousValue._BorrowingTable__308E3499.Remove(this);
				}
				this.@__BorrowingTable__308E3499.Entity = value;
				if ((value != null))
				{
					value._BorrowingTable__308E3499.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Form_ID_Source = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Form_ID_Source = default(string);
				}
				this.SendPropertyChanged("_BorrowingTable__308E3499");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CodedFormTable")]
public partial class CodedFormTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _CodedForm;
	
	private string _Form;
	
	private string _FormDataset;
	
	private int _Concepticon;
	
	private string _Semantic_Field;
	
	private int _Language;
	
	private string _Family;
	
	private EntityRef<ConcepticonTable> _ConcepticonTable;
	
	private EntityRef<LanguageTable2> _LanguageTable2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodedFormChanging(string value);
    partial void OnCodedFormChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDatasetChanging(string value);
    partial void OnFormDatasetChanged();
    partial void OnConcepticonChanging(int value);
    partial void OnConcepticonChanged();
    partial void OnSemantic_FieldChanging(string value);
    partial void OnSemantic_FieldChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    #endregion
	
	public CodedFormTable()
	{
		this._ConcepticonTable = default(EntityRef<ConcepticonTable>);
		this._LanguageTable2 = default(EntityRef<LanguageTable2>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodedForm", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string CodedForm
	{
		get
		{
			return this._CodedForm;
		}
		set
		{
			if ((this._CodedForm != value))
			{
				this.OnCodedFormChanging(value);
				this.SendPropertyChanging();
				this._CodedForm = value;
				this.SendPropertyChanged("CodedForm");
				this.OnCodedFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Form
	{
		get
		{
			return this._Form;
		}
		set
		{
			if ((this._Form != value))
			{
				this.OnFormChanging(value);
				this.SendPropertyChanging();
				this._Form = value;
				this.SendPropertyChanged("Form");
				this.OnFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDataset", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string FormDataset
	{
		get
		{
			return this._FormDataset;
		}
		set
		{
			if ((this._FormDataset != value))
			{
				this.OnFormDatasetChanging(value);
				this.SendPropertyChanging();
				this._FormDataset = value;
				this.SendPropertyChanged("FormDataset");
				this.OnFormDatasetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon", DbType="Int NOT NULL")]
	public int Concepticon
	{
		get
		{
			return this._Concepticon;
		}
		set
		{
			if ((this._Concepticon != value))
			{
				if (this._ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticonChanging(value);
				this.SendPropertyChanging();
				this._Concepticon = value;
				this.SendPropertyChanged("Concepticon");
				this.OnConcepticonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semantic_Field", DbType="NVarChar(100)")]
	public string Semantic_Field
	{
		get
		{
			return this._Semantic_Field;
		}
		set
		{
			if ((this._Semantic_Field != value))
			{
				this.OnSemantic_FieldChanging(value);
				this.SendPropertyChanging();
				this._Semantic_Field = value;
				this.SendPropertyChanged("Semantic_Field");
				this.OnSemantic_FieldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				if (this._LanguageTable2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(100)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CodedForm__Conce__7EC1CEDB", Storage="_ConcepticonTable", ThisKey="Concepticon", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable ConcepticonTable
	{
		get
		{
			return this._ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ConcepticonTable.Entity = null;
					previousValue.CodedFormTable.Remove(this);
				}
				this._ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value.CodedFormTable.Add(this);
					this._Concepticon = value.ID;
				}
				else
				{
					this._Concepticon = default(int);
				}
				this.SendPropertyChanged("ConcepticonTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CodedForm__Langu__7FB5F314", Storage="_LanguageTable2", ThisKey="Language", OtherKey="ID", IsForeignKey=true)]
	public LanguageTable2 LanguageTable2
	{
		get
		{
			return this._LanguageTable2.Entity;
		}
		set
		{
			LanguageTable2 previousValue = this._LanguageTable2.Entity;
			if (((previousValue != value) 
						|| (this._LanguageTable2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LanguageTable2.Entity = null;
					previousValue.CodedFormTable.Remove(this);
				}
				this._LanguageTable2.Entity = value;
				if ((value != null))
				{
					value.CodedFormTable.Add(this);
					this._Language = value.ID;
				}
				else
				{
					this._Language = default(int);
				}
				this.SendPropertyChanged("LanguageTable2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CognateSource")]
public partial class CognateSource
{
	
	private string _Cognate_ID;
	
	private string _Source_ID;
	
	private string _Context;
	
	private string _Dataset_ID;
	
	public CognateSource()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognate_ID", DbType="NVarChar(100)")]
	public string Cognate_ID
	{
		get
		{
			return this._Cognate_ID;
		}
		set
		{
			if ((this._Cognate_ID != value))
			{
				this._Cognate_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="NVarChar(100)")]
	public string Source_ID
	{
		get
		{
			return this._Source_ID;
		}
		set
		{
			if ((this._Source_ID != value))
			{
				this._Source_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Context
	{
		get
		{
			return this._Context;
		}
		set
		{
			if ((this._Context != value))
			{
				this._Context = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this._Dataset_ID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CognateTable")]
public partial class CognateTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Form_ID;
	
	private string _Form;
	
	private string _Cognateset_ID;
	
	private System.Nullable<int> _Doubt;
	
	private string _Cognate_Detection_Method;
	
	private string _Alignment;
	
	private string _Alignment_Method;
	
	private string _Alignment_Source;
	
	private string _Dataset_ID;
	
	private string _Segment_Slice;
	
	private string _Diacl_lexeme_id;
	
	private EntityRef<Dataset> _Dataset;
	
	private EntityRef<FormTable> _FormTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnForm_IDChanging(string value);
    partial void OnForm_IDChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnCognateset_IDChanging(string value);
    partial void OnCognateset_IDChanged();
    partial void OnDoubtChanging(System.Nullable<int> value);
    partial void OnDoubtChanged();
    partial void OnCognate_Detection_MethodChanging(string value);
    partial void OnCognate_Detection_MethodChanged();
    partial void OnAlignmentChanging(string value);
    partial void OnAlignmentChanged();
    partial void OnAlignment_MethodChanging(string value);
    partial void OnAlignment_MethodChanged();
    partial void OnAlignment_SourceChanging(string value);
    partial void OnAlignment_SourceChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnSegment_SliceChanging(string value);
    partial void OnSegment_SliceChanged();
    partial void OnDiacl_lexeme_idChanging(string value);
    partial void OnDiacl_lexeme_idChanged();
    #endregion
	
	public CognateTable()
	{
		this._Dataset = default(EntityRef<Dataset>);
		this._FormTable = default(EntityRef<FormTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_ID", DbType="NVarChar(100)")]
	public string Form_ID
	{
		get
		{
			return this._Form_ID;
		}
		set
		{
			if ((this._Form_ID != value))
			{
				if (this._FormTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnForm_IDChanging(value);
				this.SendPropertyChanging();
				this._Form_ID = value;
				this.SendPropertyChanged("Form_ID");
				this.OnForm_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(100)")]
	public string Form
	{
		get
		{
			return this._Form;
		}
		set
		{
			if ((this._Form != value))
			{
				this.OnFormChanging(value);
				this.SendPropertyChanging();
				this._Form = value;
				this.SendPropertyChanged("Form");
				this.OnFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognateset_ID", DbType="NVarChar(100)")]
	public string Cognateset_ID
	{
		get
		{
			return this._Cognateset_ID;
		}
		set
		{
			if ((this._Cognateset_ID != value))
			{
				this.OnCognateset_IDChanging(value);
				this.SendPropertyChanging();
				this._Cognateset_ID = value;
				this.SendPropertyChanged("Cognateset_ID");
				this.OnCognateset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doubt", DbType="Int")]
	public System.Nullable<int> Doubt
	{
		get
		{
			return this._Doubt;
		}
		set
		{
			if ((this._Doubt != value))
			{
				this.OnDoubtChanging(value);
				this.SendPropertyChanging();
				this._Doubt = value;
				this.SendPropertyChanged("Doubt");
				this.OnDoubtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognate_Detection_Method", DbType="NVarChar(100)")]
	public string Cognate_Detection_Method
	{
		get
		{
			return this._Cognate_Detection_Method;
		}
		set
		{
			if ((this._Cognate_Detection_Method != value))
			{
				this.OnCognate_Detection_MethodChanging(value);
				this.SendPropertyChanging();
				this._Cognate_Detection_Method = value;
				this.SendPropertyChanged("Cognate_Detection_Method");
				this.OnCognate_Detection_MethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment", DbType="NVarChar(100)")]
	public string Alignment
	{
		get
		{
			return this._Alignment;
		}
		set
		{
			if ((this._Alignment != value))
			{
				this.OnAlignmentChanging(value);
				this.SendPropertyChanging();
				this._Alignment = value;
				this.SendPropertyChanged("Alignment");
				this.OnAlignmentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment_Method", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Alignment_Method
	{
		get
		{
			return this._Alignment_Method;
		}
		set
		{
			if ((this._Alignment_Method != value))
			{
				this.OnAlignment_MethodChanging(value);
				this.SendPropertyChanging();
				this._Alignment_Method = value;
				this.SendPropertyChanged("Alignment_Method");
				this.OnAlignment_MethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alignment_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Alignment_Source
	{
		get
		{
			return this._Alignment_Source;
		}
		set
		{
			if ((this._Alignment_Source != value))
			{
				this.OnAlignment_SourceChanging(value);
				this.SendPropertyChanging();
				this._Alignment_Source = value;
				this.SendPropertyChanged("Alignment_Source");
				this.OnAlignment_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segment_Slice", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Segment_Slice
	{
		get
		{
			return this._Segment_Slice;
		}
		set
		{
			if ((this._Segment_Slice != value))
			{
				this.OnSegment_SliceChanging(value);
				this.SendPropertyChanging();
				this._Segment_Slice = value;
				this.SendPropertyChanged("Segment_Slice");
				this.OnSegment_SliceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diacl_lexeme_id", Storage="_Diacl_lexeme_id", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Diacl_lexeme_id
	{
		get
		{
			return this._Diacl_lexeme_id;
		}
		set
		{
			if ((this._Diacl_lexeme_id != value))
			{
				this.OnDiacl_lexeme_idChanging(value);
				this.SendPropertyChanging();
				this._Diacl_lexeme_id = value;
				this.SendPropertyChanged("Diacl_lexeme_id");
				this.OnDiacl_lexeme_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CognateTa__datas__24285DB4", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.CognateTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.CognateTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CognateTable__2334397B", Storage="_FormTable", ThisKey="Dataset_ID,Form_ID", OtherKey="Dataset_ID,ID", IsForeignKey=true, DeleteOnNull=true)]
	public FormTable FormTable
	{
		get
		{
			return this._FormTable.Entity;
		}
		set
		{
			FormTable previousValue = this._FormTable.Entity;
			if (((previousValue != value) 
						|| (this._FormTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FormTable.Entity = null;
					previousValue.CognateTable.Remove(this);
				}
				this._FormTable.Entity = value;
				if ((value != null))
				{
					value.CognateTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Form_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Form_ID = default(string);
				}
				this.SendPropertyChanged("FormTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColexForm")]
public partial class ColexForm : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _Colex;
	
	private int _Concepticon;
	
	private string _Form;
	
	private string _FormDataset;
	
	private EntityRef<FormTable> _FormTable;
	
	private EntityRef<ColexTable> _ColexTable;
	
	private EntityRef<ConcepticonTable> _ConcepticonTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColexChanging(int value);
    partial void OnColexChanged();
    partial void OnConcepticonChanging(int value);
    partial void OnConcepticonChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDatasetChanging(string value);
    partial void OnFormDatasetChanged();
    #endregion
	
	public ColexForm()
	{
		this._FormTable = default(EntityRef<FormTable>);
		this._ColexTable = default(EntityRef<ColexTable>);
		this._ConcepticonTable = default(EntityRef<ConcepticonTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colex", DbType="Int NOT NULL")]
	public int Colex
	{
		get
		{
			return this._Colex;
		}
		set
		{
			if ((this._Colex != value))
			{
				if (this._ColexTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnColexChanging(value);
				this.SendPropertyChanging();
				this._Colex = value;
				this.SendPropertyChanged("Colex");
				this.OnColexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon", DbType="Int NOT NULL")]
	public int Concepticon
	{
		get
		{
			return this._Concepticon;
		}
		set
		{
			if ((this._Concepticon != value))
			{
				if (this._ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticonChanging(value);
				this.SendPropertyChanging();
				this._Concepticon = value;
				this.SendPropertyChanged("Concepticon");
				this.OnConcepticonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Form
	{
		get
		{
			return this._Form;
		}
		set
		{
			if ((this._Form != value))
			{
				if (this._FormTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFormChanging(value);
				this.SendPropertyChanging();
				this._Form = value;
				this.SendPropertyChanged("Form");
				this.OnFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDataset", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string FormDataset
	{
		get
		{
			return this._FormDataset;
		}
		set
		{
			if ((this._FormDataset != value))
			{
				if (this._FormTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFormDatasetChanging(value);
				this.SendPropertyChanging();
				this._FormDataset = value;
				this.SendPropertyChanged("FormDataset");
				this.OnFormDatasetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__6501FCD8", Storage="_FormTable", ThisKey="FormDataset,Form", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public FormTable FormTable
	{
		get
		{
			return this._FormTable.Entity;
		}
		set
		{
			FormTable previousValue = this._FormTable.Entity;
			if (((previousValue != value) 
						|| (this._FormTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FormTable.Entity = null;
					previousValue.ColexForm.Remove(this);
				}
				this._FormTable.Entity = value;
				if ((value != null))
				{
					value.ColexForm.Add(this);
					this._FormDataset = value.Dataset_ID;
					this._Form = value.ID;
				}
				else
				{
					this._FormDataset = default(string);
					this._Form = default(string);
				}
				this.SendPropertyChanged("FormTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__Colex__6319B466", Storage="_ColexTable", ThisKey="Colex", OtherKey="ID", IsForeignKey=true)]
	public ColexTable ColexTable
	{
		get
		{
			return this._ColexTable.Entity;
		}
		set
		{
			ColexTable previousValue = this._ColexTable.Entity;
			if (((previousValue != value) 
						|| (this._ColexTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ColexTable.Entity = null;
					previousValue.ColexForm.Remove(this);
				}
				this._ColexTable.Entity = value;
				if ((value != null))
				{
					value.ColexForm.Add(this);
					this._Colex = value.ID;
				}
				else
				{
					this._Colex = default(int);
				}
				this.SendPropertyChanged("ColexTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__Conce__640DD89F", Storage="_ConcepticonTable", ThisKey="Concepticon", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable ConcepticonTable
	{
		get
		{
			return this._ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ConcepticonTable.Entity = null;
					previousValue.ColexForm.Remove(this);
				}
				this._ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value.ColexForm.Add(this);
					this._Concepticon = value.ID;
				}
				else
				{
					this._Concepticon = default(int);
				}
				this.SendPropertyChanged("ConcepticonTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColexTable")]
public partial class ColexTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _Language;
	
	private string _Value;
	
	private EntitySet<ColexForm> _ColexForm;
	
	private EntityRef<LanguageTable2> _LanguageTable2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
	
	public ColexTable()
	{
		this._ColexForm = new EntitySet<ColexForm>(new Action<ColexForm>(this.attach_ColexForm), new Action<ColexForm>(this.detach_ColexForm));
		this._LanguageTable2 = default(EntityRef<LanguageTable2>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				if (this._LanguageTable2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__Colex__6319B466", Storage="_ColexForm", ThisKey="ID", OtherKey="Colex", DeleteRule="NO ACTION")]
	public EntitySet<ColexForm> ColexForm
	{
		get
		{
			return this._ColexForm;
		}
		set
		{
			this._ColexForm.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexTabl__Langu__603D47BB", Storage="_LanguageTable2", ThisKey="Language", OtherKey="ID", IsForeignKey=true)]
	public LanguageTable2 LanguageTable2
	{
		get
		{
			return this._LanguageTable2.Entity;
		}
		set
		{
			LanguageTable2 previousValue = this._LanguageTable2.Entity;
			if (((previousValue != value) 
						|| (this._LanguageTable2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LanguageTable2.Entity = null;
					previousValue.ColexTable.Remove(this);
				}
				this._LanguageTable2.Entity = value;
				if ((value != null))
				{
					value.ColexTable.Add(this);
					this._Language = value.ID;
				}
				else
				{
					this._Language = default(int);
				}
				this.SendPropertyChanged("LanguageTable2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.ColexTable = this;
	}
	
	private void detach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.ColexTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConcepticonLink")]
public partial class ConcepticonLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _Concepticon1;
	
	private int _Concepticon2;
	
	private int _Strength;
	
	private EntityRef<ConcepticonTable> _ConcepticonTable;
	
	private EntityRef<ConcepticonTable> _Concepticon2ConcepticonTable;
	
	private EntitySet<LinkLanguage> _LinkLanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConcepticon1Changing(int value);
    partial void OnConcepticon1Changed();
    partial void OnConcepticon2Changing(int value);
    partial void OnConcepticon2Changed();
    partial void OnStrengthChanging(int value);
    partial void OnStrengthChanged();
    #endregion
	
	public ConcepticonLink()
	{
		this._ConcepticonTable = default(EntityRef<ConcepticonTable>);
		this._Concepticon2ConcepticonTable = default(EntityRef<ConcepticonTable>);
		this._LinkLanguage = new EntitySet<LinkLanguage>(new Action<LinkLanguage>(this.attach_LinkLanguage), new Action<LinkLanguage>(this.detach_LinkLanguage));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon1", DbType="Int NOT NULL")]
	public int Concepticon1
	{
		get
		{
			return this._Concepticon1;
		}
		set
		{
			if ((this._Concepticon1 != value))
			{
				if (this._ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticon1Changing(value);
				this.SendPropertyChanging();
				this._Concepticon1 = value;
				this.SendPropertyChanged("Concepticon1");
				this.OnConcepticon1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon2", DbType="Int NOT NULL")]
	public int Concepticon2
	{
		get
		{
			return this._Concepticon2;
		}
		set
		{
			if ((this._Concepticon2 != value))
			{
				if (this._Concepticon2ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticon2Changing(value);
				this.SendPropertyChanging();
				this._Concepticon2 = value;
				this.SendPropertyChanged("Concepticon2");
				this.OnConcepticon2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Int NOT NULL")]
	public int Strength
	{
		get
		{
			return this._Strength;
		}
		set
		{
			if ((this._Strength != value))
			{
				this.OnStrengthChanging(value);
				this.SendPropertyChanging();
				this._Strength = value;
				this.SendPropertyChanged("Strength");
				this.OnStrengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Conceptic__Conce__56B3DD81", Storage="_ConcepticonTable", ThisKey="Concepticon1", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable ConcepticonTable
	{
		get
		{
			return this._ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ConcepticonTable.Entity = null;
					previousValue.ConcepticonLink.Remove(this);
				}
				this._ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value.ConcepticonLink.Add(this);
					this._Concepticon1 = value.ID;
				}
				else
				{
					this._Concepticon1 = default(int);
				}
				this.SendPropertyChanged("ConcepticonTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Conceptic__Conce__57A801BA", Storage="_Concepticon2ConcepticonTable", ThisKey="Concepticon2", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable Concepticon2ConcepticonTable
	{
		get
		{
			return this._Concepticon2ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._Concepticon2ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._Concepticon2ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Concepticon2ConcepticonTable.Entity = null;
					previousValue._Conceptic__Conce__57A801BA.Remove(this);
				}
				this._Concepticon2ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value._Conceptic__Conce__57A801BA.Add(this);
					this._Concepticon2 = value.ID;
				}
				else
				{
					this._Concepticon2 = default(int);
				}
				this.SendPropertyChanged("Concepticon2ConcepticonTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LinkLangu__Conce__67DE6983", Storage="_LinkLanguage", ThisKey="ID", OtherKey="ConcepticonLink", DeleteRule="NO ACTION")]
	public EntitySet<LinkLanguage> LinkLanguage
	{
		get
		{
			return this._LinkLanguage;
		}
		set
		{
			this._LinkLanguage.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LinkLanguage(LinkLanguage entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonLinkConcepticonLink = this;
	}
	
	private void detach_LinkLanguage(LinkLanguage entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonLinkConcepticonLink = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConcepticonTable")]
public partial class ConcepticonTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Concepticon_ID;
	
	private string _Concepticon_Gloss;
	
	private string _Ontological_Category;
	
	private string _Semantic_Field;
	
	private System.Nullable<int> _Colexifications;
	
	private System.Nullable<int> _Forms;
	
	private EntitySet<CodedFormTable> _CodedFormTable;
	
	private EntitySet<ColexForm> _ColexForm;
	
	private EntitySet<ConcepticonLink> _ConcepticonLink;
	
	private EntitySet<ConcepticonLink> @__Conceptic__Conce__57A801BA;
	
	private EntitySet<RandomwalkLink> _RandomwalkLink;
	
	private EntitySet<RandomwalkLink> @__Randomwal__Conce__7BE56230;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConcepticon_IDChanging(string value);
    partial void OnConcepticon_IDChanged();
    partial void OnConcepticon_GlossChanging(string value);
    partial void OnConcepticon_GlossChanged();
    partial void OnOntological_CategoryChanging(string value);
    partial void OnOntological_CategoryChanged();
    partial void OnSemantic_FieldChanging(string value);
    partial void OnSemantic_FieldChanged();
    partial void OnColexificationsChanging(System.Nullable<int> value);
    partial void OnColexificationsChanged();
    partial void OnFormsChanging(System.Nullable<int> value);
    partial void OnFormsChanged();
    #endregion
	
	public ConcepticonTable()
	{
		this._CodedFormTable = new EntitySet<CodedFormTable>(new Action<CodedFormTable>(this.attach_CodedFormTable), new Action<CodedFormTable>(this.detach_CodedFormTable));
		this._ColexForm = new EntitySet<ColexForm>(new Action<ColexForm>(this.attach_ColexForm), new Action<ColexForm>(this.detach_ColexForm));
		this._ConcepticonLink = new EntitySet<ConcepticonLink>(new Action<ConcepticonLink>(this.attach_ConcepticonLink), new Action<ConcepticonLink>(this.detach_ConcepticonLink));
		this.@__Conceptic__Conce__57A801BA = new EntitySet<ConcepticonLink>(new Action<ConcepticonLink>(this.attach__Conceptic__Conce__57A801BA), new Action<ConcepticonLink>(this.detach__Conceptic__Conce__57A801BA));
		this._RandomwalkLink = new EntitySet<RandomwalkLink>(new Action<RandomwalkLink>(this.attach_RandomwalkLink), new Action<RandomwalkLink>(this.detach_RandomwalkLink));
		this.@__Randomwal__Conce__7BE56230 = new EntitySet<RandomwalkLink>(new Action<RandomwalkLink>(this.attach__Randomwal__Conce__7BE56230), new Action<RandomwalkLink>(this.detach__Randomwal__Conce__7BE56230));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon_ID", DbType="NVarChar(100)")]
	public string Concepticon_ID
	{
		get
		{
			return this._Concepticon_ID;
		}
		set
		{
			if ((this._Concepticon_ID != value))
			{
				this.OnConcepticon_IDChanging(value);
				this.SendPropertyChanging();
				this._Concepticon_ID = value;
				this.SendPropertyChanged("Concepticon_ID");
				this.OnConcepticon_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon_Gloss", DbType="NVarChar(100)")]
	public string Concepticon_Gloss
	{
		get
		{
			return this._Concepticon_Gloss;
		}
		set
		{
			if ((this._Concepticon_Gloss != value))
			{
				this.OnConcepticon_GlossChanging(value);
				this.SendPropertyChanging();
				this._Concepticon_Gloss = value;
				this.SendPropertyChanged("Concepticon_Gloss");
				this.OnConcepticon_GlossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ontological_Category", DbType="NVarChar(100)")]
	public string Ontological_Category
	{
		get
		{
			return this._Ontological_Category;
		}
		set
		{
			if ((this._Ontological_Category != value))
			{
				this.OnOntological_CategoryChanging(value);
				this.SendPropertyChanging();
				this._Ontological_Category = value;
				this.SendPropertyChanged("Ontological_Category");
				this.OnOntological_CategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semantic_Field", DbType="NVarChar(100)")]
	public string Semantic_Field
	{
		get
		{
			return this._Semantic_Field;
		}
		set
		{
			if ((this._Semantic_Field != value))
			{
				this.OnSemantic_FieldChanging(value);
				this.SendPropertyChanging();
				this._Semantic_Field = value;
				this.SendPropertyChanged("Semantic_Field");
				this.OnSemantic_FieldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colexifications", DbType="Int")]
	public System.Nullable<int> Colexifications
	{
		get
		{
			return this._Colexifications;
		}
		set
		{
			if ((this._Colexifications != value))
			{
				this.OnColexificationsChanging(value);
				this.SendPropertyChanging();
				this._Colexifications = value;
				this.SendPropertyChanged("Colexifications");
				this.OnColexificationsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forms", DbType="Int")]
	public System.Nullable<int> Forms
	{
		get
		{
			return this._Forms;
		}
		set
		{
			if ((this._Forms != value))
			{
				this.OnFormsChanging(value);
				this.SendPropertyChanging();
				this._Forms = value;
				this.SendPropertyChanged("Forms");
				this.OnFormsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CodedForm__Conce__7EC1CEDB", Storage="_CodedFormTable", ThisKey="ID", OtherKey="Concepticon", DeleteRule="NO ACTION")]
	public EntitySet<CodedFormTable> CodedFormTable
	{
		get
		{
			return this._CodedFormTable;
		}
		set
		{
			this._CodedFormTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__Conce__640DD89F", Storage="_ColexForm", ThisKey="ID", OtherKey="Concepticon", DeleteRule="NO ACTION")]
	public EntitySet<ColexForm> ColexForm
	{
		get
		{
			return this._ColexForm;
		}
		set
		{
			this._ColexForm.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Conceptic__Conce__56B3DD81", Storage="_ConcepticonLink", ThisKey="ID", OtherKey="Concepticon1", DeleteRule="NO ACTION")]
	public EntitySet<ConcepticonLink> ConcepticonLink
	{
		get
		{
			return this._ConcepticonLink;
		}
		set
		{
			this._ConcepticonLink.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Conceptic__Conce__57A801BA", Storage="__Conceptic__Conce__57A801BA", ThisKey="ID", OtherKey="Concepticon2", DeleteRule="NO ACTION")]
	public EntitySet<ConcepticonLink> _Conceptic__Conce__57A801BA
	{
		get
		{
			return this.@__Conceptic__Conce__57A801BA;
		}
		set
		{
			this.@__Conceptic__Conce__57A801BA.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Randomwal__Conce__7AF13DF7", Storage="_RandomwalkLink", ThisKey="ID", OtherKey="Concepticon1", DeleteRule="NO ACTION")]
	public EntitySet<RandomwalkLink> RandomwalkLink
	{
		get
		{
			return this._RandomwalkLink;
		}
		set
		{
			this._RandomwalkLink.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Randomwal__Conce__7BE56230", Storage="__Randomwal__Conce__7BE56230", ThisKey="ID", OtherKey="Concepticon2", DeleteRule="NO ACTION")]
	public EntitySet<RandomwalkLink> _Randomwal__Conce__7BE56230
	{
		get
		{
			return this.@__Randomwal__Conce__7BE56230;
		}
		set
		{
			this.@__Randomwal__Conce__7BE56230.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CodedFormTable(CodedFormTable entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = this;
	}
	
	private void detach_CodedFormTable(CodedFormTable entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = null;
	}
	
	private void attach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = this;
	}
	
	private void detach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = null;
	}
	
	private void attach_ConcepticonLink(ConcepticonLink entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = this;
	}
	
	private void detach_ConcepticonLink(ConcepticonLink entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = null;
	}
	
	private void attach__Conceptic__Conce__57A801BA(ConcepticonLink entity)
	{
		this.SendPropertyChanging();
		entity.Concepticon2ConcepticonTable = this;
	}
	
	private void detach__Conceptic__Conce__57A801BA(ConcepticonLink entity)
	{
		this.SendPropertyChanging();
		entity.Concepticon2ConcepticonTable = null;
	}
	
	private void attach_RandomwalkLink(RandomwalkLink entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = this;
	}
	
	private void detach_RandomwalkLink(RandomwalkLink entity)
	{
		this.SendPropertyChanging();
		entity.ConcepticonTable = null;
	}
	
	private void attach__Randomwal__Conce__7BE56230(RandomwalkLink entity)
	{
		this.SendPropertyChanging();
		entity.Concepticon2ConcepticonTable = this;
	}
	
	private void detach__Randomwal__Conce__7BE56230(RandomwalkLink entity)
	{
		this.SendPropertyChanging();
		entity.Concepticon2ConcepticonTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dataset")]
public partial class Dataset : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Name;
	
	private string _Version;
	
	private string _Metadata_json;
	
	private EntitySet<BorrowingTable> _BorrowingTable;
	
	private EntitySet<CognateTable> _CognateTable;
	
	private EntitySet<Datasetmeta> _Datasetmeta;
	
	private EntitySet<FormTable> _FormTable;
	
	private EntitySet<LanguageTable> _LanguageTable;
	
	private EntitySet<ParameterTable> _ParameterTable;
	
	private EntitySet<SourceTable> _SourceTable;
	
	private EntitySet<ValueTable> _ValueTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnMetadata_jsonChanging(string value);
    partial void OnMetadata_jsonChanged();
    #endregion
	
	public Dataset()
	{
		this._BorrowingTable = new EntitySet<BorrowingTable>(new Action<BorrowingTable>(this.attach_BorrowingTable), new Action<BorrowingTable>(this.detach_BorrowingTable));
		this._CognateTable = new EntitySet<CognateTable>(new Action<CognateTable>(this.attach_CognateTable), new Action<CognateTable>(this.detach_CognateTable));
		this._Datasetmeta = new EntitySet<Datasetmeta>(new Action<Datasetmeta>(this.attach_Datasetmeta), new Action<Datasetmeta>(this.detach_Datasetmeta));
		this._FormTable = new EntitySet<FormTable>(new Action<FormTable>(this.attach_FormTable), new Action<FormTable>(this.detach_FormTable));
		this._LanguageTable = new EntitySet<LanguageTable>(new Action<LanguageTable>(this.attach_LanguageTable), new Action<LanguageTable>(this.detach_LanguageTable));
		this._ParameterTable = new EntitySet<ParameterTable>(new Action<ParameterTable>(this.attach_ParameterTable), new Action<ParameterTable>(this.detach_ParameterTable));
		this._SourceTable = new EntitySet<SourceTable>(new Action<SourceTable>(this.attach_SourceTable), new Action<SourceTable>(this.detach_SourceTable));
		this._ValueTable = new EntitySet<ValueTable>(new Action<ValueTable>(this.attach_ValueTable), new Action<ValueTable>(this.detach_ValueTable));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Version
	{
		get
		{
			return this._Version;
		}
		set
		{
			if ((this._Version != value))
			{
				this.OnVersionChanging(value);
				this.SendPropertyChanging();
				this._Version = value;
				this.SendPropertyChanged("Version");
				this.OnVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="metadata_json", Storage="_Metadata_json", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Metadata_json
	{
		get
		{
			return this._Metadata_json;
		}
		set
		{
			if ((this._Metadata_json != value))
			{
				this.OnMetadata_jsonChanging(value);
				this.SendPropertyChanging();
				this._Metadata_json = value;
				this.SendPropertyChanged("Metadata_json");
				this.OnMetadata_jsonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Borrowing__datas__2EA5EC27", Storage="_BorrowingTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="NO ACTION")]
	public EntitySet<BorrowingTable> BorrowingTable
	{
		get
		{
			return this._BorrowingTable;
		}
		set
		{
			this._BorrowingTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CognateTa__datas__24285DB4", Storage="_CognateTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="CASCADE")]
	public EntitySet<CognateTable> CognateTable
	{
		get
		{
			return this._CognateTable;
		}
		set
		{
			this._CognateTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__datasetme__datas__12FDD1B2", Storage="_Datasetmeta", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="NO ACTION")]
	public EntitySet<Datasetmeta> Datasetmeta
	{
		get
		{
			return this._Datasetmeta;
		}
		set
		{
			this._Datasetmeta.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__datas__1E6F845E", Storage="_FormTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="NO ACTION")]
	public EntitySet<FormTable> FormTable
	{
		get
		{
			return this._FormTable;
		}
		set
		{
			this._FormTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LanguageT__datas__18B6AB08", Storage="_LanguageTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="CASCADE")]
	public EntitySet<LanguageTable> LanguageTable
	{
		get
		{
			return this._LanguageTable;
		}
		set
		{
			this._LanguageTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Parameter__datas__1B9317B3", Storage="_ParameterTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="CASCADE")]
	public EntitySet<ParameterTable> ParameterTable
	{
		get
		{
			return this._ParameterTable;
		}
		set
		{
			this._ParameterTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__SourceTab__datas__15DA3E5D", Storage="_SourceTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="NO ACTION")]
	public EntitySet<SourceTable> SourceTable
	{
		get
		{
			return this._SourceTable;
		}
		set
		{
			this._SourceTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTabl__datas__336AA144", Storage="_ValueTable", ThisKey="ID", OtherKey="Dataset_ID", DeleteRule="NO ACTION")]
	public EntitySet<ValueTable> ValueTable
	{
		get
		{
			return this._ValueTable;
		}
		set
		{
			this._ValueTable.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BorrowingTable(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_BorrowingTable(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_CognateTable(CognateTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_CognateTable(CognateTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_Datasetmeta(Datasetmeta entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_Datasetmeta(Datasetmeta entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_LanguageTable(LanguageTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_LanguageTable(LanguageTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_ParameterTable(ParameterTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_ParameterTable(ParameterTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_SourceTable(SourceTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_SourceTable(SourceTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
	
	private void attach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = this;
	}
	
	private void detach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.Dataset = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.datasetmeta")]
public partial class Datasetmeta : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Dataset_ID;
	
	private string _Key;
	
	private string _Value;
	
	private EntityRef<Dataset> _Dataset;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
	
	public Datasetmeta()
	{
		this._Dataset = default(EntityRef<Dataset>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="key", Storage="_Key", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Key
	{
		get
		{
			return this._Key;
		}
		set
		{
			if ((this._Key != value))
			{
				this.OnKeyChanging(value);
				this.SendPropertyChanging();
				this._Key = value;
				this.SendPropertyChanged("Key");
				this.OnKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="value", Storage="_Value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__datasetme__datas__12FDD1B2", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.Datasetmeta.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.Datasetmeta.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormSource")]
public partial class FormSource
{
	
	private string _Form_ID;
	
	private string _Source_ID;
	
	private string _Context;
	
	private string _Dataset_ID;
	
	public FormSource()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_ID", DbType="NVarChar(100)")]
	public string Form_ID
	{
		get
		{
			return this._Form_ID;
		}
		set
		{
			if ((this._Form_ID != value))
			{
				this._Form_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="NVarChar(100)")]
	public string Source_ID
	{
		get
		{
			return this._Source_ID;
		}
		set
		{
			if ((this._Source_ID != value))
			{
				this._Source_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Context
	{
		get
		{
			return this._Context;
		}
		set
		{
			if ((this._Context != value))
			{
				this._Context = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this._Dataset_ID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormTable")]
public partial class FormTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Local_ID;
	
	private string _Language_ID;
	
	private string _Parameter_ID;
	
	private string _Value;
	
	private string _Form;
	
	private string _Segments;
	
	private string _Comment;
	
	private string _Cognacy;
	
	private System.Nullable<int> _Loan;
	
	private string _Dataset_ID;
	
	private string _Clics_form;
	
	private string _Benzi;
	
	private string _Transcription;
	
	private string _AlternativeValue;
	
	private string _AlternativeTranscription;
	
	private string _Orthography;
	
	private string _Word_ID;
	
	private string _Word_source;
	
	private string _Borrowed;
	
	private string _Borrowed_score;
	
	private string _Comment_on_borrowed;
	
	private string _Comment_on_word_form;
	
	private string _Borrowed_base;
	
	private string _Other_comments;
	
	private string _Loan_history;
	
	private string _Analyzability;
	
	private string _Simplicity_score;
	
	private string _Reference;
	
	private string _Numeric_frequency;
	
	private string _Age_label;
	
	private string _Gloss;
	
	private string _Integration;
	
	private string _Salience;
	
	private string _Effect;
	
	private string _Contact_situation;
	
	private string _Original_script;
	
	private string _Diacl_id;
	
	private string _Meaning;
	
	private string _Meaning_note;
	
	private string _Transliteration;
	
	private string _Ipa;
	
	private string _Local_Orthography;
	
	private EntitySet<BorrowingTable> _BorrowingTable;
	
	private EntitySet<BorrowingTable> @__BorrowingTable__308E3499;
	
	private EntitySet<CognateTable> _CognateTable;
	
	private EntitySet<ColexForm> _ColexForm;
	
	private EntityRef<LanguageTable> _LanguageTable;
	
	private EntityRef<ParameterTable> _ParameterTable;
	
	private EntityRef<Dataset> _Dataset;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnLocal_IDChanging(string value);
    partial void OnLocal_IDChanged();
    partial void OnLanguage_IDChanging(string value);
    partial void OnLanguage_IDChanged();
    partial void OnParameter_IDChanging(string value);
    partial void OnParameter_IDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnSegmentsChanging(string value);
    partial void OnSegmentsChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCognacyChanging(string value);
    partial void OnCognacyChanged();
    partial void OnLoanChanging(System.Nullable<int> value);
    partial void OnLoanChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnClics_formChanging(string value);
    partial void OnClics_formChanged();
    partial void OnBenziChanging(string value);
    partial void OnBenziChanged();
    partial void OnTranscriptionChanging(string value);
    partial void OnTranscriptionChanged();
    partial void OnAlternativeValueChanging(string value);
    partial void OnAlternativeValueChanged();
    partial void OnAlternativeTranscriptionChanging(string value);
    partial void OnAlternativeTranscriptionChanged();
    partial void OnOrthographyChanging(string value);
    partial void OnOrthographyChanged();
    partial void OnWord_IDChanging(string value);
    partial void OnWord_IDChanged();
    partial void OnWord_sourceChanging(string value);
    partial void OnWord_sourceChanged();
    partial void OnBorrowedChanging(string value);
    partial void OnBorrowedChanged();
    partial void OnBorrowed_scoreChanging(string value);
    partial void OnBorrowed_scoreChanged();
    partial void OnComment_on_borrowedChanging(string value);
    partial void OnComment_on_borrowedChanged();
    partial void OnComment_on_word_formChanging(string value);
    partial void OnComment_on_word_formChanged();
    partial void OnBorrowed_baseChanging(string value);
    partial void OnBorrowed_baseChanged();
    partial void OnOther_commentsChanging(string value);
    partial void OnOther_commentsChanged();
    partial void OnLoan_historyChanging(string value);
    partial void OnLoan_historyChanged();
    partial void OnAnalyzabilityChanging(string value);
    partial void OnAnalyzabilityChanged();
    partial void OnSimplicity_scoreChanging(string value);
    partial void OnSimplicity_scoreChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnNumeric_frequencyChanging(string value);
    partial void OnNumeric_frequencyChanged();
    partial void OnAge_labelChanging(string value);
    partial void OnAge_labelChanged();
    partial void OnGlossChanging(string value);
    partial void OnGlossChanged();
    partial void OnIntegrationChanging(string value);
    partial void OnIntegrationChanged();
    partial void OnSalienceChanging(string value);
    partial void OnSalienceChanged();
    partial void OnEffectChanging(string value);
    partial void OnEffectChanged();
    partial void OnContact_situationChanging(string value);
    partial void OnContact_situationChanged();
    partial void OnOriginal_scriptChanging(string value);
    partial void OnOriginal_scriptChanged();
    partial void OnDiacl_idChanging(string value);
    partial void OnDiacl_idChanged();
    partial void OnMeaningChanging(string value);
    partial void OnMeaningChanged();
    partial void OnMeaning_noteChanging(string value);
    partial void OnMeaning_noteChanged();
    partial void OnTransliterationChanging(string value);
    partial void OnTransliterationChanged();
    partial void OnIpaChanging(string value);
    partial void OnIpaChanged();
    partial void OnLocal_OrthographyChanging(string value);
    partial void OnLocal_OrthographyChanged();
    #endregion
	
	public FormTable()
	{
		this._BorrowingTable = new EntitySet<BorrowingTable>(new Action<BorrowingTable>(this.attach_BorrowingTable), new Action<BorrowingTable>(this.detach_BorrowingTable));
		this.@__BorrowingTable__308E3499 = new EntitySet<BorrowingTable>(new Action<BorrowingTable>(this.attach__BorrowingTable__308E3499), new Action<BorrowingTable>(this.detach__BorrowingTable__308E3499));
		this._CognateTable = new EntitySet<CognateTable>(new Action<CognateTable>(this.attach_CognateTable), new Action<CognateTable>(this.detach_CognateTable));
		this._ColexForm = new EntitySet<ColexForm>(new Action<ColexForm>(this.attach_ColexForm), new Action<ColexForm>(this.detach_ColexForm));
		this._LanguageTable = default(EntityRef<LanguageTable>);
		this._ParameterTable = default(EntityRef<ParameterTable>);
		this._Dataset = default(EntityRef<Dataset>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Local_ID", DbType="NVarChar(100)")]
	public string Local_ID
	{
		get
		{
			return this._Local_ID;
		}
		set
		{
			if ((this._Local_ID != value))
			{
				this.OnLocal_IDChanging(value);
				this.SendPropertyChanging();
				this._Local_ID = value;
				this.SendPropertyChanged("Local_ID");
				this.OnLocal_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language_ID", DbType="NVarChar(100)")]
	public string Language_ID
	{
		get
		{
			return this._Language_ID;
		}
		set
		{
			if ((this._Language_ID != value))
			{
				if (this._LanguageTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLanguage_IDChanging(value);
				this.SendPropertyChanging();
				this._Language_ID = value;
				this.SendPropertyChanged("Language_ID");
				this.OnLanguage_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter_ID", DbType="NVarChar(100)")]
	public string Parameter_ID
	{
		get
		{
			return this._Parameter_ID;
		}
		set
		{
			if ((this._Parameter_ID != value))
			{
				if (this._ParameterTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParameter_IDChanging(value);
				this.SendPropertyChanging();
				this._Parameter_ID = value;
				this.SendPropertyChanged("Parameter_ID");
				this.OnParameter_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500)")]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(100)")]
	public string Form
	{
		get
		{
			return this._Form;
		}
		set
		{
			if ((this._Form != value))
			{
				this.OnFormChanging(value);
				this.SendPropertyChanging();
				this._Form = value;
				this.SendPropertyChanged("Form");
				this.OnFormChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segments", DbType="NVarChar(100)")]
	public string Segments
	{
		get
		{
			return this._Segments;
		}
		set
		{
			if ((this._Segments != value))
			{
				this.OnSegmentsChanging(value);
				this.SendPropertyChanging();
				this._Segments = value;
				this.SendPropertyChanged("Segments");
				this.OnSegmentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognacy", DbType="NVarChar(100)")]
	public string Cognacy
	{
		get
		{
			return this._Cognacy;
		}
		set
		{
			if ((this._Cognacy != value))
			{
				this.OnCognacyChanging(value);
				this.SendPropertyChanging();
				this._Cognacy = value;
				this.SendPropertyChanged("Cognacy");
				this.OnCognacyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loan", DbType="Int")]
	public System.Nullable<int> Loan
	{
		get
		{
			return this._Loan;
		}
		set
		{
			if ((this._Loan != value))
			{
				this.OnLoanChanging(value);
				this.SendPropertyChanging();
				this._Loan = value;
				this.SendPropertyChanged("Loan");
				this.OnLoanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="clics_form", Storage="_Clics_form", DbType="NVarChar(100)")]
	public string Clics_form
	{
		get
		{
			return this._Clics_form;
		}
		set
		{
			if ((this._Clics_form != value))
			{
				this.OnClics_formChanging(value);
				this.SendPropertyChanging();
				this._Clics_form = value;
				this.SendPropertyChanged("Clics_form");
				this.OnClics_formChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Benzi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Benzi
	{
		get
		{
			return this._Benzi;
		}
		set
		{
			if ((this._Benzi != value))
			{
				this.OnBenziChanging(value);
				this.SendPropertyChanging();
				this._Benzi = value;
				this.SendPropertyChanged("Benzi");
				this.OnBenziChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transcription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Transcription
	{
		get
		{
			return this._Transcription;
		}
		set
		{
			if ((this._Transcription != value))
			{
				this.OnTranscriptionChanging(value);
				this.SendPropertyChanging();
				this._Transcription = value;
				this.SendPropertyChanged("Transcription");
				this.OnTranscriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string AlternativeValue
	{
		get
		{
			return this._AlternativeValue;
		}
		set
		{
			if ((this._AlternativeValue != value))
			{
				this.OnAlternativeValueChanging(value);
				this.SendPropertyChanging();
				this._AlternativeValue = value;
				this.SendPropertyChanged("AlternativeValue");
				this.OnAlternativeValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeTranscription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string AlternativeTranscription
	{
		get
		{
			return this._AlternativeTranscription;
		}
		set
		{
			if ((this._AlternativeTranscription != value))
			{
				this.OnAlternativeTranscriptionChanging(value);
				this.SendPropertyChanging();
				this._AlternativeTranscription = value;
				this.SendPropertyChanged("AlternativeTranscription");
				this.OnAlternativeTranscriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orthography", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Orthography
	{
		get
		{
			return this._Orthography;
		}
		set
		{
			if ((this._Orthography != value))
			{
				this.OnOrthographyChanging(value);
				this.SendPropertyChanging();
				this._Orthography = value;
				this.SendPropertyChanged("Orthography");
				this.OnOrthographyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word_ID", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Word_ID
	{
		get
		{
			return this._Word_ID;
		}
		set
		{
			if ((this._Word_ID != value))
			{
				this.OnWord_IDChanging(value);
				this.SendPropertyChanging();
				this._Word_ID = value;
				this.SendPropertyChanged("Word_ID");
				this.OnWord_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="word_source", Storage="_Word_source", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Word_source
	{
		get
		{
			return this._Word_source;
		}
		set
		{
			if ((this._Word_source != value))
			{
				this.OnWord_sourceChanging(value);
				this.SendPropertyChanging();
				this._Word_source = value;
				this.SendPropertyChanged("Word_source");
				this.OnWord_sourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrowed", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Borrowed
	{
		get
		{
			return this._Borrowed;
		}
		set
		{
			if ((this._Borrowed != value))
			{
				this.OnBorrowedChanging(value);
				this.SendPropertyChanging();
				this._Borrowed = value;
				this.SendPropertyChanged("Borrowed");
				this.OnBorrowedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrowed_score", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Borrowed_score
	{
		get
		{
			return this._Borrowed_score;
		}
		set
		{
			if ((this._Borrowed_score != value))
			{
				this.OnBorrowed_scoreChanging(value);
				this.SendPropertyChanging();
				this._Borrowed_score = value;
				this.SendPropertyChanged("Borrowed_score");
				this.OnBorrowed_scoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment_on_borrowed", Storage="_Comment_on_borrowed", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment_on_borrowed
	{
		get
		{
			return this._Comment_on_borrowed;
		}
		set
		{
			if ((this._Comment_on_borrowed != value))
			{
				this.OnComment_on_borrowedChanging(value);
				this.SendPropertyChanging();
				this._Comment_on_borrowed = value;
				this.SendPropertyChanged("Comment_on_borrowed");
				this.OnComment_on_borrowedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment_on_word_form", Storage="_Comment_on_word_form", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment_on_word_form
	{
		get
		{
			return this._Comment_on_word_form;
		}
		set
		{
			if ((this._Comment_on_word_form != value))
			{
				this.OnComment_on_word_formChanging(value);
				this.SendPropertyChanging();
				this._Comment_on_word_form = value;
				this.SendPropertyChanged("Comment_on_word_form");
				this.OnComment_on_word_formChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="borrowed_base", Storage="_Borrowed_base", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Borrowed_base
	{
		get
		{
			return this._Borrowed_base;
		}
		set
		{
			if ((this._Borrowed_base != value))
			{
				this.OnBorrowed_baseChanging(value);
				this.SendPropertyChanging();
				this._Borrowed_base = value;
				this.SendPropertyChanged("Borrowed_base");
				this.OnBorrowed_baseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="other_comments", Storage="_Other_comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Other_comments
	{
		get
		{
			return this._Other_comments;
		}
		set
		{
			if ((this._Other_comments != value))
			{
				this.OnOther_commentsChanging(value);
				this.SendPropertyChanging();
				this._Other_comments = value;
				this.SendPropertyChanged("Other_comments");
				this.OnOther_commentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="loan_history", Storage="_Loan_history", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Loan_history
	{
		get
		{
			return this._Loan_history;
		}
		set
		{
			if ((this._Loan_history != value))
			{
				this.OnLoan_historyChanging(value);
				this.SendPropertyChanging();
				this._Loan_history = value;
				this.SendPropertyChanged("Loan_history");
				this.OnLoan_historyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Analyzability", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Analyzability
	{
		get
		{
			return this._Analyzability;
		}
		set
		{
			if ((this._Analyzability != value))
			{
				this.OnAnalyzabilityChanging(value);
				this.SendPropertyChanging();
				this._Analyzability = value;
				this.SendPropertyChanged("Analyzability");
				this.OnAnalyzabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simplicity_score", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Simplicity_score
	{
		get
		{
			return this._Simplicity_score;
		}
		set
		{
			if ((this._Simplicity_score != value))
			{
				this.OnSimplicity_scoreChanging(value);
				this.SendPropertyChanging();
				this._Simplicity_score = value;
				this.SendPropertyChanged("Simplicity_score");
				this.OnSimplicity_scoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="reference", Storage="_Reference", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Reference
	{
		get
		{
			return this._Reference;
		}
		set
		{
			if ((this._Reference != value))
			{
				this.OnReferenceChanging(value);
				this.SendPropertyChanging();
				this._Reference = value;
				this.SendPropertyChanged("Reference");
				this.OnReferenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="numeric_frequency", Storage="_Numeric_frequency", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Numeric_frequency
	{
		get
		{
			return this._Numeric_frequency;
		}
		set
		{
			if ((this._Numeric_frequency != value))
			{
				this.OnNumeric_frequencyChanging(value);
				this.SendPropertyChanging();
				this._Numeric_frequency = value;
				this.SendPropertyChanged("Numeric_frequency");
				this.OnNumeric_frequencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="age_label", Storage="_Age_label", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Age_label
	{
		get
		{
			return this._Age_label;
		}
		set
		{
			if ((this._Age_label != value))
			{
				this.OnAge_labelChanging(value);
				this.SendPropertyChanging();
				this._Age_label = value;
				this.SendPropertyChanged("Age_label");
				this.OnAge_labelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gloss", Storage="_Gloss", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Gloss
	{
		get
		{
			return this._Gloss;
		}
		set
		{
			if ((this._Gloss != value))
			{
				this.OnGlossChanging(value);
				this.SendPropertyChanging();
				this._Gloss = value;
				this.SendPropertyChanged("Gloss");
				this.OnGlossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="integration", Storage="_Integration", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Integration
	{
		get
		{
			return this._Integration;
		}
		set
		{
			if ((this._Integration != value))
			{
				this.OnIntegrationChanging(value);
				this.SendPropertyChanging();
				this._Integration = value;
				this.SendPropertyChanged("Integration");
				this.OnIntegrationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="salience", Storage="_Salience", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Salience
	{
		get
		{
			return this._Salience;
		}
		set
		{
			if ((this._Salience != value))
			{
				this.OnSalienceChanging(value);
				this.SendPropertyChanging();
				this._Salience = value;
				this.SendPropertyChanged("Salience");
				this.OnSalienceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="effect", Storage="_Effect", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Effect
	{
		get
		{
			return this._Effect;
		}
		set
		{
			if ((this._Effect != value))
			{
				this.OnEffectChanging(value);
				this.SendPropertyChanging();
				this._Effect = value;
				this.SendPropertyChanged("Effect");
				this.OnEffectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="contact_situation", Storage="_Contact_situation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Contact_situation
	{
		get
		{
			return this._Contact_situation;
		}
		set
		{
			if ((this._Contact_situation != value))
			{
				this.OnContact_situationChanging(value);
				this.SendPropertyChanging();
				this._Contact_situation = value;
				this.SendPropertyChanged("Contact_situation");
				this.OnContact_situationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="original_script", Storage="_Original_script", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Original_script
	{
		get
		{
			return this._Original_script;
		}
		set
		{
			if ((this._Original_script != value))
			{
				this.OnOriginal_scriptChanging(value);
				this.SendPropertyChanging();
				this._Original_script = value;
				this.SendPropertyChanged("Original_script");
				this.OnOriginal_scriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diacl_id", Storage="_Diacl_id", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Diacl_id
	{
		get
		{
			return this._Diacl_id;
		}
		set
		{
			if ((this._Diacl_id != value))
			{
				this.OnDiacl_idChanging(value);
				this.SendPropertyChanging();
				this._Diacl_id = value;
				this.SendPropertyChanged("Diacl_id");
				this.OnDiacl_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="meaning", Storage="_Meaning", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Meaning
	{
		get
		{
			return this._Meaning;
		}
		set
		{
			if ((this._Meaning != value))
			{
				this.OnMeaningChanging(value);
				this.SendPropertyChanging();
				this._Meaning = value;
				this.SendPropertyChanged("Meaning");
				this.OnMeaningChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="meaning_note", Storage="_Meaning_note", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Meaning_note
	{
		get
		{
			return this._Meaning_note;
		}
		set
		{
			if ((this._Meaning_note != value))
			{
				this.OnMeaning_noteChanging(value);
				this.SendPropertyChanging();
				this._Meaning_note = value;
				this.SendPropertyChanged("Meaning_note");
				this.OnMeaning_noteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="transliteration", Storage="_Transliteration", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Transliteration
	{
		get
		{
			return this._Transliteration;
		}
		set
		{
			if ((this._Transliteration != value))
			{
				this.OnTransliterationChanging(value);
				this.SendPropertyChanging();
				this._Transliteration = value;
				this.SendPropertyChanged("Transliteration");
				this.OnTransliterationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ipa", Storage="_Ipa", DbType="NVarChar(100)")]
	public string Ipa
	{
		get
		{
			return this._Ipa;
		}
		set
		{
			if ((this._Ipa != value))
			{
				this.OnIpaChanging(value);
				this.SendPropertyChanging();
				this._Ipa = value;
				this.SendPropertyChanged("Ipa");
				this.OnIpaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Local_Orthography", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Local_Orthography
	{
		get
		{
			return this._Local_Orthography;
		}
		set
		{
			if ((this._Local_Orthography != value))
			{
				this.OnLocal_OrthographyChanging(value);
				this.SendPropertyChanging();
				this._Local_Orthography = value;
				this.SendPropertyChanged("Local_Orthography");
				this.OnLocal_OrthographyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BorrowingTable__2F9A1060", Storage="_BorrowingTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Form_ID_Target", DeleteRule="NO ACTION")]
	public EntitySet<BorrowingTable> BorrowingTable
	{
		get
		{
			return this._BorrowingTable;
		}
		set
		{
			this._BorrowingTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BorrowingTable__308E3499", Storage="__BorrowingTable__308E3499", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Form_ID_Source", DeleteRule="NO ACTION")]
	public EntitySet<BorrowingTable> _BorrowingTable__308E3499
	{
		get
		{
			return this.@__BorrowingTable__308E3499;
		}
		set
		{
			this.@__BorrowingTable__308E3499.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CognateTable__2334397B", Storage="_CognateTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Form_ID", DeleteRule="CASCADE")]
	public EntitySet<CognateTable> CognateTable
	{
		get
		{
			return this._CognateTable;
		}
		set
		{
			this._CognateTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexForm__6501FCD8", Storage="_ColexForm", ThisKey="Dataset_ID,ID", OtherKey="FormDataset,Form", DeleteRule="NO ACTION")]
	public EntitySet<ColexForm> ColexForm
	{
		get
		{
			return this._ColexForm;
		}
		set
		{
			this._ColexForm.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__1F63A897", Storage="_LanguageTable", ThisKey="Dataset_ID,Language_ID", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public LanguageTable LanguageTable
	{
		get
		{
			return this._LanguageTable.Entity;
		}
		set
		{
			LanguageTable previousValue = this._LanguageTable.Entity;
			if (((previousValue != value) 
						|| (this._LanguageTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LanguageTable.Entity = null;
					previousValue.FormTable.Remove(this);
				}
				this._LanguageTable.Entity = value;
				if ((value != null))
				{
					value.FormTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Language_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Language_ID = default(string);
				}
				this.SendPropertyChanged("LanguageTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__2057CCD0", Storage="_ParameterTable", ThisKey="Dataset_ID,Parameter_ID", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public ParameterTable ParameterTable
	{
		get
		{
			return this._ParameterTable.Entity;
		}
		set
		{
			ParameterTable previousValue = this._ParameterTable.Entity;
			if (((previousValue != value) 
						|| (this._ParameterTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ParameterTable.Entity = null;
					previousValue.FormTable.Remove(this);
				}
				this._ParameterTable.Entity = value;
				if ((value != null))
				{
					value.FormTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Parameter_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Parameter_ID = default(string);
				}
				this.SendPropertyChanged("ParameterTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__datas__1E6F845E", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.FormTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.FormTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BorrowingTable(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = this;
	}
	
	private void detach_BorrowingTable(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = null;
	}
	
	private void attach__BorrowingTable__308E3499(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity._BorrowingTable__308E3499 = this;
	}
	
	private void detach__BorrowingTable__308E3499(BorrowingTable entity)
	{
		this.SendPropertyChanging();
		entity._BorrowingTable__308E3499 = null;
	}
	
	private void attach_CognateTable(CognateTable entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = this;
	}
	
	private void detach_CognateTable(CognateTable entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = null;
	}
	
	private void attach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = this;
	}
	
	private void detach_ColexForm(ColexForm entity)
	{
		this.SendPropertyChanging();
		entity.FormTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageTable")]
public partial class LanguageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Name;
	
	private string _Glottocode;
	
	private string _Glottolog_Name;
	
	private string _ISO639P3code;
	
	private string _Macroarea;
	
	private System.Nullable<float> _Latitude;
	
	private System.Nullable<float> _Longitude;
	
	private string _Family;
	
	private string _Dataset_ID;
	
	private string _ChineseName;
	
	private string _SubGroup;
	
	private string _DialectGroup;
	
	private string _Author;
	
	private string _Url;
	
	private string _Typedby;
	
	private string _Checkedby;
	
	private string _Notes;
	
	private string _Name_in_Source;
	
	private string _Subfamily;
	
	private string _Token;
	
	private string _Dialect;
	
	private string _WOLD_ID;
	
	private string _Source;
	
	private string _Source_ID;
	
	private string _WiktionaryName;
	
	private string _Area;
	
	private string _Population;
	
	private string _ID_in_Source;
	
	private string _Location;
	
	private string _Number_in_Source;
	
	private string _DataSource;
	
	private string _Autonym;
	
	private string _ISO;
	
	private string _Time_frame;
	
	private string _Number;
	
	private string _Village;
	
	private string _Phylum;
	
	private string _STEDT_Name;
	
	private string _Coverage;
	
	private string _Type;
	
	private string _Date;
	
	private string _Transcriber;
	
	private string _Short_Name;
	
	private string _Region;
	
	private string _Culture;
	
	private string _Description;
	
	private string _Orthography;
	
	private string _Comment;
	
	private EntitySet<FormTable> _FormTable;
	
	private EntityRef<Dataset> _Dataset;
	
	private EntitySet<ValueTable> _ValueTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGlottocodeChanging(string value);
    partial void OnGlottocodeChanged();
    partial void OnGlottolog_NameChanging(string value);
    partial void OnGlottolog_NameChanged();
    partial void OnISO639P3codeChanging(string value);
    partial void OnISO639P3codeChanged();
    partial void OnMacroareaChanging(string value);
    partial void OnMacroareaChanged();
    partial void OnLatitudeChanging(System.Nullable<float> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<float> value);
    partial void OnLongitudeChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnChineseNameChanging(string value);
    partial void OnChineseNameChanged();
    partial void OnSubGroupChanging(string value);
    partial void OnSubGroupChanged();
    partial void OnDialectGroupChanging(string value);
    partial void OnDialectGroupChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTypedbyChanging(string value);
    partial void OnTypedbyChanged();
    partial void OnCheckedbyChanging(string value);
    partial void OnCheckedbyChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnName_in_SourceChanging(string value);
    partial void OnName_in_SourceChanged();
    partial void OnSubfamilyChanging(string value);
    partial void OnSubfamilyChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnDialectChanging(string value);
    partial void OnDialectChanged();
    partial void OnWOLD_IDChanging(string value);
    partial void OnWOLD_IDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnSource_IDChanging(string value);
    partial void OnSource_IDChanged();
    partial void OnWiktionaryNameChanging(string value);
    partial void OnWiktionaryNameChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnPopulationChanging(string value);
    partial void OnPopulationChanged();
    partial void OnID_in_SourceChanging(string value);
    partial void OnID_in_SourceChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNumber_in_SourceChanging(string value);
    partial void OnNumber_in_SourceChanged();
    partial void OnDataSourceChanging(string value);
    partial void OnDataSourceChanged();
    partial void OnAutonymChanging(string value);
    partial void OnAutonymChanged();
    partial void OnISOChanging(string value);
    partial void OnISOChanged();
    partial void OnTime_frameChanging(string value);
    partial void OnTime_frameChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnVillageChanging(string value);
    partial void OnVillageChanged();
    partial void OnPhylumChanging(string value);
    partial void OnPhylumChanged();
    partial void OnSTEDT_NameChanging(string value);
    partial void OnSTEDT_NameChanged();
    partial void OnCoverageChanging(string value);
    partial void OnCoverageChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTranscriberChanging(string value);
    partial void OnTranscriberChanged();
    partial void OnShort_NameChanging(string value);
    partial void OnShort_NameChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrthographyChanging(string value);
    partial void OnOrthographyChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public LanguageTable()
	{
		this._FormTable = new EntitySet<FormTable>(new Action<FormTable>(this.attach_FormTable), new Action<FormTable>(this.detach_FormTable));
		this._Dataset = default(EntityRef<Dataset>);
		this._ValueTable = new EntitySet<ValueTable>(new Action<ValueTable>(this.attach_ValueTable), new Action<ValueTable>(this.detach_ValueTable));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glottocode", DbType="NVarChar(100)")]
	public string Glottocode
	{
		get
		{
			return this._Glottocode;
		}
		set
		{
			if ((this._Glottocode != value))
			{
				this.OnGlottocodeChanging(value);
				this.SendPropertyChanging();
				this._Glottocode = value;
				this.SendPropertyChanged("Glottocode");
				this.OnGlottocodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glottolog_Name", DbType="NVarChar(100)")]
	public string Glottolog_Name
	{
		get
		{
			return this._Glottolog_Name;
		}
		set
		{
			if ((this._Glottolog_Name != value))
			{
				this.OnGlottolog_NameChanging(value);
				this.SendPropertyChanging();
				this._Glottolog_Name = value;
				this.SendPropertyChanged("Glottolog_Name");
				this.OnGlottolog_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO639P3code", DbType="NVarChar(10)")]
	public string ISO639P3code
	{
		get
		{
			return this._ISO639P3code;
		}
		set
		{
			if ((this._ISO639P3code != value))
			{
				this.OnISO639P3codeChanging(value);
				this.SendPropertyChanging();
				this._ISO639P3code = value;
				this.SendPropertyChanged("ISO639P3code");
				this.OnISO639P3codeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Macroarea", DbType="NVarChar(100)")]
	public string Macroarea
	{
		get
		{
			return this._Macroarea;
		}
		set
		{
			if ((this._Macroarea != value))
			{
				this.OnMacroareaChanging(value);
				this.SendPropertyChanging();
				this._Macroarea = value;
				this.SendPropertyChanged("Macroarea");
				this.OnMacroareaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Real")]
	public System.Nullable<float> Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Real")]
	public System.Nullable<float> Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(100)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="NVarChar(100)")]
	public string ChineseName
	{
		get
		{
			return this._ChineseName;
		}
		set
		{
			if ((this._ChineseName != value))
			{
				this.OnChineseNameChanging(value);
				this.SendPropertyChanging();
				this._ChineseName = value;
				this.SendPropertyChanged("ChineseName");
				this.OnChineseNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGroup", DbType="NVarChar(100)")]
	public string SubGroup
	{
		get
		{
			return this._SubGroup;
		}
		set
		{
			if ((this._SubGroup != value))
			{
				this.OnSubGroupChanging(value);
				this.SendPropertyChanging();
				this._SubGroup = value;
				this.SendPropertyChanged("SubGroup");
				this.OnSubGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectGroup", DbType="NVarChar(100)")]
	public string DialectGroup
	{
		get
		{
			return this._DialectGroup;
		}
		set
		{
			if ((this._DialectGroup != value))
			{
				this.OnDialectGroupChanging(value);
				this.SendPropertyChanging();
				this._DialectGroup = value;
				this.SendPropertyChanged("DialectGroup");
				this.OnDialectGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="author", Storage="_Author", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url", Storage="_Url", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="typedby", Storage="_Typedby", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Typedby
	{
		get
		{
			return this._Typedby;
		}
		set
		{
			if ((this._Typedby != value))
			{
				this.OnTypedbyChanging(value);
				this.SendPropertyChanging();
				this._Typedby = value;
				this.SendPropertyChanged("Typedby");
				this.OnTypedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="checkedby", Storage="_Checkedby", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Checkedby
	{
		get
		{
			return this._Checkedby;
		}
		set
		{
			if ((this._Checkedby != value))
			{
				this.OnCheckedbyChanging(value);
				this.SendPropertyChanging();
				this._Checkedby = value;
				this.SendPropertyChanged("Checkedby");
				this.OnCheckedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="notes", Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_in_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Name_in_Source
	{
		get
		{
			return this._Name_in_Source;
		}
		set
		{
			if ((this._Name_in_Source != value))
			{
				this.OnName_in_SourceChanging(value);
				this.SendPropertyChanging();
				this._Name_in_Source = value;
				this.SendPropertyChanged("Name_in_Source");
				this.OnName_in_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subfamily", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Subfamily
	{
		get
		{
			return this._Subfamily;
		}
		set
		{
			if ((this._Subfamily != value))
			{
				this.OnSubfamilyChanging(value);
				this.SendPropertyChanging();
				this._Subfamily = value;
				this.SendPropertyChanged("Subfamily");
				this.OnSubfamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Token
	{
		get
		{
			return this._Token;
		}
		set
		{
			if ((this._Token != value))
			{
				this.OnTokenChanging(value);
				this.SendPropertyChanging();
				this._Token = value;
				this.SendPropertyChanged("Token");
				this.OnTokenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dialect", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Dialect
	{
		get
		{
			return this._Dialect;
		}
		set
		{
			if ((this._Dialect != value))
			{
				this.OnDialectChanging(value);
				this.SendPropertyChanging();
				this._Dialect = value;
				this.SendPropertyChanged("Dialect");
				this.OnDialectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOLD_ID", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string WOLD_ID
	{
		get
		{
			return this._WOLD_ID;
		}
		set
		{
			if ((this._WOLD_ID != value))
			{
				this.OnWOLD_IDChanging(value);
				this.SendPropertyChanging();
				this._WOLD_ID = value;
				this.SendPropertyChanged("WOLD_ID");
				this.OnWOLD_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Source_ID
	{
		get
		{
			return this._Source_ID;
		}
		set
		{
			if ((this._Source_ID != value))
			{
				this.OnSource_IDChanging(value);
				this.SendPropertyChanging();
				this._Source_ID = value;
				this.SendPropertyChanged("Source_ID");
				this.OnSource_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WiktionaryName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string WiktionaryName
	{
		get
		{
			return this._WiktionaryName;
		}
		set
		{
			if ((this._WiktionaryName != value))
			{
				this.OnWiktionaryNameChanging(value);
				this.SendPropertyChanging();
				this._WiktionaryName = value;
				this.SendPropertyChanged("WiktionaryName");
				this.OnWiktionaryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(100)")]
	public string Area
	{
		get
		{
			return this._Area;
		}
		set
		{
			if ((this._Area != value))
			{
				this.OnAreaChanging(value);
				this.SendPropertyChanging();
				this._Area = value;
				this.SendPropertyChanged("Area");
				this.OnAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Population
	{
		get
		{
			return this._Population;
		}
		set
		{
			if ((this._Population != value))
			{
				this.OnPopulationChanging(value);
				this.SendPropertyChanging();
				this._Population = value;
				this.SendPropertyChanged("Population");
				this.OnPopulationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_in_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string ID_in_Source
	{
		get
		{
			return this._ID_in_Source;
		}
		set
		{
			if ((this._ID_in_Source != value))
			{
				this.OnID_in_SourceChanging(value);
				this.SendPropertyChanging();
				this._ID_in_Source = value;
				this.SendPropertyChanged("ID_in_Source");
				this.OnID_in_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_in_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Number_in_Source
	{
		get
		{
			return this._Number_in_Source;
		}
		set
		{
			if ((this._Number_in_Source != value))
			{
				this.OnNumber_in_SourceChanging(value);
				this.SendPropertyChanging();
				this._Number_in_Source = value;
				this.SendPropertyChanged("Number_in_Source");
				this.OnNumber_in_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSource", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string DataSource
	{
		get
		{
			return this._DataSource;
		}
		set
		{
			if ((this._DataSource != value))
			{
				this.OnDataSourceChanging(value);
				this.SendPropertyChanging();
				this._DataSource = value;
				this.SendPropertyChanged("DataSource");
				this.OnDataSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autonym", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Autonym
	{
		get
		{
			return this._Autonym;
		}
		set
		{
			if ((this._Autonym != value))
			{
				this.OnAutonymChanging(value);
				this.SendPropertyChanging();
				this._Autonym = value;
				this.SendPropertyChanged("Autonym");
				this.OnAutonymChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO", DbType="NVarChar(100)")]
	public string ISO
	{
		get
		{
			return this._ISO;
		}
		set
		{
			if ((this._ISO != value))
			{
				this.OnISOChanging(value);
				this.SendPropertyChanging();
				this._ISO = value;
				this.SendPropertyChanged("ISO");
				this.OnISOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="time_frame", Storage="_Time_frame", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Time_frame
	{
		get
		{
			return this._Time_frame;
		}
		set
		{
			if ((this._Time_frame != value))
			{
				this.OnTime_frameChanging(value);
				this.SendPropertyChanging();
				this._Time_frame = value;
				this.SendPropertyChanged("Time_frame");
				this.OnTime_frameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Village", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Village
	{
		get
		{
			return this._Village;
		}
		set
		{
			if ((this._Village != value))
			{
				this.OnVillageChanging(value);
				this.SendPropertyChanging();
				this._Village = value;
				this.SendPropertyChanged("Village");
				this.OnVillageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phylum", DbType="NVarChar(100)")]
	public string Phylum
	{
		get
		{
			return this._Phylum;
		}
		set
		{
			if ((this._Phylum != value))
			{
				this.OnPhylumChanging(value);
				this.SendPropertyChanging();
				this._Phylum = value;
				this.SendPropertyChanged("Phylum");
				this.OnPhylumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEDT_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string STEDT_Name
	{
		get
		{
			return this._STEDT_Name;
		}
		set
		{
			if ((this._STEDT_Name != value))
			{
				this.OnSTEDT_NameChanging(value);
				this.SendPropertyChanging();
				this._STEDT_Name = value;
				this.SendPropertyChanged("STEDT_Name");
				this.OnSTEDT_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coverage", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Coverage
	{
		get
		{
			return this._Coverage;
		}
		set
		{
			if ((this._Coverage != value))
			{
				this.OnCoverageChanging(value);
				this.SendPropertyChanging();
				this._Coverage = value;
				this.SendPropertyChanged("Coverage");
				this.OnCoverageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transcriber", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Transcriber
	{
		get
		{
			return this._Transcriber;
		}
		set
		{
			if ((this._Transcriber != value))
			{
				this.OnTranscriberChanging(value);
				this.SendPropertyChanging();
				this._Transcriber = value;
				this.SendPropertyChanged("Transcriber");
				this.OnTranscriberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Short_Name
	{
		get
		{
			return this._Short_Name;
		}
		set
		{
			if ((this._Short_Name != value))
			{
				this.OnShort_NameChanging(value);
				this.SendPropertyChanging();
				this._Short_Name = value;
				this.SendPropertyChanged("Short_Name");
				this.OnShort_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Region
	{
		get
		{
			return this._Region;
		}
		set
		{
			if ((this._Region != value))
			{
				this.OnRegionChanging(value);
				this.SendPropertyChanging();
				this._Region = value;
				this.SendPropertyChanged("Region");
				this.OnRegionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Culture
	{
		get
		{
			return this._Culture;
		}
		set
		{
			if ((this._Culture != value))
			{
				this.OnCultureChanging(value);
				this.SendPropertyChanging();
				this._Culture = value;
				this.SendPropertyChanged("Culture");
				this.OnCultureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orthography", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Orthography
	{
		get
		{
			return this._Orthography;
		}
		set
		{
			if ((this._Orthography != value))
			{
				this.OnOrthographyChanging(value);
				this.SendPropertyChanging();
				this._Orthography = value;
				this.SendPropertyChanged("Orthography");
				this.OnOrthographyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__1F63A897", Storage="_FormTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Language_ID", DeleteRule="NO ACTION")]
	public EntitySet<FormTable> FormTable
	{
		get
		{
			return this._FormTable;
		}
		set
		{
			this._FormTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LanguageT__datas__18B6AB08", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.LanguageTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.LanguageTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTable__345EC57D", Storage="_ValueTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Lect_ID", DeleteRule="NO ACTION")]
	public EntitySet<ValueTable> ValueTable
	{
		get
		{
			return this._ValueTable;
		}
		set
		{
			this._ValueTable.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable = this;
	}
	
	private void detach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable = null;
	}
	
	private void attach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable = this;
	}
	
	private void detach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageTable2")]
public partial class LanguageTable2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Iso;
	
	private string _Glottocode;
	
	private string _Macroarea;
	
	private System.Nullable<float> _Latitude;
	
	private System.Nullable<float> _Longitude;
	
	private string _Family;
	
	private EntitySet<CodedFormTable> _CodedFormTable;
	
	private EntitySet<ColexTable> _ColexTable;
	
	private EntitySet<LinkLanguage> _LinkLanguage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsoChanging(string value);
    partial void OnIsoChanged();
    partial void OnGlottocodeChanging(string value);
    partial void OnGlottocodeChanged();
    partial void OnMacroareaChanging(string value);
    partial void OnMacroareaChanged();
    partial void OnLatitudeChanging(System.Nullable<float> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<float> value);
    partial void OnLongitudeChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    #endregion
	
	public LanguageTable2()
	{
		this._CodedFormTable = new EntitySet<CodedFormTable>(new Action<CodedFormTable>(this.attach_CodedFormTable), new Action<CodedFormTable>(this.detach_CodedFormTable));
		this._ColexTable = new EntitySet<ColexTable>(new Action<ColexTable>(this.attach_ColexTable), new Action<ColexTable>(this.detach_ColexTable));
		this._LinkLanguage = new EntitySet<LinkLanguage>(new Action<LinkLanguage>(this.attach_LinkLanguage), new Action<LinkLanguage>(this.detach_LinkLanguage));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iso", DbType="NVarChar(3)")]
	public string Iso
	{
		get
		{
			return this._Iso;
		}
		set
		{
			if ((this._Iso != value))
			{
				this.OnIsoChanging(value);
				this.SendPropertyChanging();
				this._Iso = value;
				this.SendPropertyChanged("Iso");
				this.OnIsoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glottocode", DbType="NVarChar(20)")]
	public string Glottocode
	{
		get
		{
			return this._Glottocode;
		}
		set
		{
			if ((this._Glottocode != value))
			{
				this.OnGlottocodeChanging(value);
				this.SendPropertyChanging();
				this._Glottocode = value;
				this.SendPropertyChanged("Glottocode");
				this.OnGlottocodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Macroarea", DbType="NVarChar(100)")]
	public string Macroarea
	{
		get
		{
			return this._Macroarea;
		}
		set
		{
			if ((this._Macroarea != value))
			{
				this.OnMacroareaChanging(value);
				this.SendPropertyChanging();
				this._Macroarea = value;
				this.SendPropertyChanged("Macroarea");
				this.OnMacroareaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Real")]
	public System.Nullable<float> Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Real")]
	public System.Nullable<float> Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(100)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__CodedForm__Langu__7FB5F314", Storage="_CodedFormTable", ThisKey="ID", OtherKey="Language", DeleteRule="NO ACTION")]
	public EntitySet<CodedFormTable> CodedFormTable
	{
		get
		{
			return this._CodedFormTable;
		}
		set
		{
			this._CodedFormTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ColexTabl__Langu__603D47BB", Storage="_ColexTable", ThisKey="ID", OtherKey="Language", DeleteRule="NO ACTION")]
	public EntitySet<ColexTable> ColexTable
	{
		get
		{
			return this._ColexTable;
		}
		set
		{
			this._ColexTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LinkLangu__Langu__68D28DBC", Storage="_LinkLanguage", ThisKey="ID", OtherKey="Language", DeleteRule="NO ACTION")]
	public EntitySet<LinkLanguage> LinkLanguage
	{
		get
		{
			return this._LinkLanguage;
		}
		set
		{
			this._LinkLanguage.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CodedFormTable(CodedFormTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = this;
	}
	
	private void detach_CodedFormTable(CodedFormTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = null;
	}
	
	private void attach_ColexTable(ColexTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = this;
	}
	
	private void detach_ColexTable(ColexTable entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = null;
	}
	
	private void attach_LinkLanguage(LinkLanguage entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = this;
	}
	
	private void detach_LinkLanguage(LinkLanguage entity)
	{
		this.SendPropertyChanging();
		entity.LanguageTable2 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkLanguage")]
public partial class LinkLanguage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _ConcepticonLink;
	
	private int _Language;
	
	private EntityRef<ConcepticonLink> _ConcepticonLinkConcepticonLink;
	
	private EntityRef<LanguageTable2> _LanguageTable2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConcepticonLinkChanging(int value);
    partial void OnConcepticonLinkChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    #endregion
	
	public LinkLanguage()
	{
		this._ConcepticonLinkConcepticonLink = default(EntityRef<ConcepticonLink>);
		this._LanguageTable2 = default(EntityRef<LanguageTable2>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcepticonLink", DbType="Int NOT NULL")]
	public int ConcepticonLink
	{
		get
		{
			return this._ConcepticonLink;
		}
		set
		{
			if ((this._ConcepticonLink != value))
			{
				if (this._ConcepticonLinkConcepticonLink.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticonLinkChanging(value);
				this.SendPropertyChanging();
				this._ConcepticonLink = value;
				this.SendPropertyChanged("ConcepticonLink");
				this.OnConcepticonLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				if (this._LanguageTable2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LinkLangu__Conce__67DE6983", Storage="_ConcepticonLinkConcepticonLink", ThisKey="ConcepticonLink", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonLink ConcepticonLinkConcepticonLink
	{
		get
		{
			return this._ConcepticonLinkConcepticonLink.Entity;
		}
		set
		{
			ConcepticonLink previousValue = this._ConcepticonLinkConcepticonLink.Entity;
			if (((previousValue != value) 
						|| (this._ConcepticonLinkConcepticonLink.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ConcepticonLinkConcepticonLink.Entity = null;
					previousValue.LinkLanguage.Remove(this);
				}
				this._ConcepticonLinkConcepticonLink.Entity = value;
				if ((value != null))
				{
					value.LinkLanguage.Add(this);
					this._ConcepticonLink = value.ID;
				}
				else
				{
					this._ConcepticonLink = default(int);
				}
				this.SendPropertyChanged("ConcepticonLinkConcepticonLink");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__LinkLangu__Langu__68D28DBC", Storage="_LanguageTable2", ThisKey="Language", OtherKey="ID", IsForeignKey=true)]
	public LanguageTable2 LanguageTable2
	{
		get
		{
			return this._LanguageTable2.Entity;
		}
		set
		{
			LanguageTable2 previousValue = this._LanguageTable2.Entity;
			if (((previousValue != value) 
						|| (this._LanguageTable2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LanguageTable2.Entity = null;
					previousValue.LinkLanguage.Remove(this);
				}
				this._LanguageTable2.Entity = value;
				if ((value != null))
				{
					value.LinkLanguage.Add(this);
					this._Language = value.ID;
				}
				else
				{
					this._Language = default(int);
				}
				this.SendPropertyChanged("LanguageTable2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParameterTable")]
public partial class ParameterTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Name;
	
	private string _Concepticon_ID;
	
	private string _Concepticon_Gloss;
	
	private string _Dataset_ID;
	
	private string _Ontological_Category;
	
	private string _Semantic_Field;
	
	private string _Chinese_Gloss;
	
	private string _Number;
	
	private string _Spanish;
	
	private string _Gloss_in_digital_source;
	
	private string _NorthEuralex_Gloss;
	
	private string _DIACL_ID;
	
	private string _SrcId;
	
	private string _Description;
	
	private string _Indonesian;
	
	private string _Elicitation_Notes;
	
	private System.Nullable<int> _Core_Set;
	
	private string _Comment;
	
	private EntitySet<FormTable> _FormTable;
	
	private EntityRef<Dataset> _Dataset;
	
	private EntitySet<ValueTable> _ValueTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConcepticon_IDChanging(string value);
    partial void OnConcepticon_IDChanged();
    partial void OnConcepticon_GlossChanging(string value);
    partial void OnConcepticon_GlossChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnOntological_CategoryChanging(string value);
    partial void OnOntological_CategoryChanged();
    partial void OnSemantic_FieldChanging(string value);
    partial void OnSemantic_FieldChanged();
    partial void OnChinese_GlossChanging(string value);
    partial void OnChinese_GlossChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnSpanishChanging(string value);
    partial void OnSpanishChanged();
    partial void OnGloss_in_digital_sourceChanging(string value);
    partial void OnGloss_in_digital_sourceChanged();
    partial void OnNorthEuralex_GlossChanging(string value);
    partial void OnNorthEuralex_GlossChanged();
    partial void OnDIACL_IDChanging(string value);
    partial void OnDIACL_IDChanged();
    partial void OnSrcIdChanging(string value);
    partial void OnSrcIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIndonesianChanging(string value);
    partial void OnIndonesianChanged();
    partial void OnElicitation_NotesChanging(string value);
    partial void OnElicitation_NotesChanged();
    partial void OnCore_SetChanging(System.Nullable<int> value);
    partial void OnCore_SetChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public ParameterTable()
	{
		this._FormTable = new EntitySet<FormTable>(new Action<FormTable>(this.attach_FormTable), new Action<FormTable>(this.detach_FormTable));
		this._Dataset = default(EntityRef<Dataset>);
		this._ValueTable = new EntitySet<ValueTable>(new Action<ValueTable>(this.attach_ValueTable), new Action<ValueTable>(this.detach_ValueTable));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon_ID", DbType="NVarChar(100)")]
	public string Concepticon_ID
	{
		get
		{
			return this._Concepticon_ID;
		}
		set
		{
			if ((this._Concepticon_ID != value))
			{
				this.OnConcepticon_IDChanging(value);
				this.SendPropertyChanging();
				this._Concepticon_ID = value;
				this.SendPropertyChanged("Concepticon_ID");
				this.OnConcepticon_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon_Gloss", DbType="NVarChar(100)")]
	public string Concepticon_Gloss
	{
		get
		{
			return this._Concepticon_Gloss;
		}
		set
		{
			if ((this._Concepticon_Gloss != value))
			{
				this.OnConcepticon_GlossChanging(value);
				this.SendPropertyChanging();
				this._Concepticon_Gloss = value;
				this.SendPropertyChanged("Concepticon_Gloss");
				this.OnConcepticon_GlossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ontological_Category", DbType="NVarChar(100)")]
	public string Ontological_Category
	{
		get
		{
			return this._Ontological_Category;
		}
		set
		{
			if ((this._Ontological_Category != value))
			{
				this.OnOntological_CategoryChanging(value);
				this.SendPropertyChanging();
				this._Ontological_Category = value;
				this.SendPropertyChanged("Ontological_Category");
				this.OnOntological_CategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semantic_Field", DbType="NVarChar(100)")]
	public string Semantic_Field
	{
		get
		{
			return this._Semantic_Field;
		}
		set
		{
			if ((this._Semantic_Field != value))
			{
				this.OnSemantic_FieldChanging(value);
				this.SendPropertyChanging();
				this._Semantic_Field = value;
				this.SendPropertyChanged("Semantic_Field");
				this.OnSemantic_FieldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chinese_Gloss", DbType="NVarChar(100)")]
	public string Chinese_Gloss
	{
		get
		{
			return this._Chinese_Gloss;
		}
		set
		{
			if ((this._Chinese_Gloss != value))
			{
				this.OnChinese_GlossChanging(value);
				this.SendPropertyChanging();
				this._Chinese_Gloss = value;
				this.SendPropertyChanged("Chinese_Gloss");
				this.OnChinese_GlossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(100)")]
	public string Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spanish", DbType="NVarChar(100)")]
	public string Spanish
	{
		get
		{
			return this._Spanish;
		}
		set
		{
			if ((this._Spanish != value))
			{
				this.OnSpanishChanging(value);
				this.SendPropertyChanging();
				this._Spanish = value;
				this.SendPropertyChanged("Spanish");
				this.OnSpanishChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gloss_in_digital_source", DbType="NVarChar(100)")]
	public string Gloss_in_digital_source
	{
		get
		{
			return this._Gloss_in_digital_source;
		}
		set
		{
			if ((this._Gloss_in_digital_source != value))
			{
				this.OnGloss_in_digital_sourceChanging(value);
				this.SendPropertyChanging();
				this._Gloss_in_digital_source = value;
				this.SendPropertyChanged("Gloss_in_digital_source");
				this.OnGloss_in_digital_sourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NorthEuralex_Gloss", DbType="NVarChar(100)")]
	public string NorthEuralex_Gloss
	{
		get
		{
			return this._NorthEuralex_Gloss;
		}
		set
		{
			if ((this._NorthEuralex_Gloss != value))
			{
				this.OnNorthEuralex_GlossChanging(value);
				this.SendPropertyChanging();
				this._NorthEuralex_Gloss = value;
				this.SendPropertyChanged("NorthEuralex_Gloss");
				this.OnNorthEuralex_GlossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACL_ID", DbType="NVarChar(100)")]
	public string DIACL_ID
	{
		get
		{
			return this._DIACL_ID;
		}
		set
		{
			if ((this._DIACL_ID != value))
			{
				this.OnDIACL_IDChanging(value);
				this.SendPropertyChanging();
				this._DIACL_ID = value;
				this.SendPropertyChanged("DIACL_ID");
				this.OnDIACL_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcId", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string SrcId
	{
		get
		{
			return this._SrcId;
		}
		set
		{
			if ((this._SrcId != value))
			{
				this.OnSrcIdChanging(value);
				this.SendPropertyChanging();
				this._SrcId = value;
				this.SendPropertyChanged("SrcId");
				this.OnSrcIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indonesian", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Indonesian
	{
		get
		{
			return this._Indonesian;
		}
		set
		{
			if ((this._Indonesian != value))
			{
				this.OnIndonesianChanging(value);
				this.SendPropertyChanging();
				this._Indonesian = value;
				this.SendPropertyChanged("Indonesian");
				this.OnIndonesianChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elicitation_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Elicitation_Notes
	{
		get
		{
			return this._Elicitation_Notes;
		}
		set
		{
			if ((this._Elicitation_Notes != value))
			{
				this.OnElicitation_NotesChanging(value);
				this.SendPropertyChanging();
				this._Elicitation_Notes = value;
				this.SendPropertyChanged("Elicitation_Notes");
				this.OnElicitation_NotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Core_Set", DbType="Int")]
	public System.Nullable<int> Core_Set
	{
		get
		{
			return this._Core_Set;
		}
		set
		{
			if ((this._Core_Set != value))
			{
				this.OnCore_SetChanging(value);
				this.SendPropertyChanging();
				this._Core_Set = value;
				this.SendPropertyChanged("Core_Set");
				this.OnCore_SetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__FormTable__2057CCD0", Storage="_FormTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Parameter_ID", DeleteRule="NO ACTION")]
	public EntitySet<FormTable> FormTable
	{
		get
		{
			return this._FormTable;
		}
		set
		{
			this._FormTable.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Parameter__datas__1B9317B3", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.ParameterTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.ParameterTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTable__3552E9B6", Storage="_ValueTable", ThisKey="Dataset_ID,ID", OtherKey="Dataset_ID,Concept_ID", DeleteRule="NO ACTION")]
	public EntitySet<ValueTable> ValueTable
	{
		get
		{
			return this._ValueTable;
		}
		set
		{
			this._ValueTable.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.ParameterTable = this;
	}
	
	private void detach_FormTable(FormTable entity)
	{
		this.SendPropertyChanging();
		entity.ParameterTable = null;
	}
	
	private void attach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.ParameterTable = this;
	}
	
	private void detach_ValueTable(ValueTable entity)
	{
		this.SendPropertyChanging();
		entity.ParameterTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RandomwalkLink")]
public partial class RandomwalkLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _Concepticon1;
	
	private int _Concepticon2;
	
	private int _Strength;
	
	private int _Walks;
	
	private EntityRef<ConcepticonTable> _ConcepticonTable;
	
	private EntityRef<ConcepticonTable> _Concepticon2ConcepticonTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConcepticon1Changing(int value);
    partial void OnConcepticon1Changed();
    partial void OnConcepticon2Changing(int value);
    partial void OnConcepticon2Changed();
    partial void OnStrengthChanging(int value);
    partial void OnStrengthChanged();
    partial void OnWalksChanging(int value);
    partial void OnWalksChanged();
    #endregion
	
	public RandomwalkLink()
	{
		this._ConcepticonTable = default(EntityRef<ConcepticonTable>);
		this._Concepticon2ConcepticonTable = default(EntityRef<ConcepticonTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon1", DbType="Int NOT NULL")]
	public int Concepticon1
	{
		get
		{
			return this._Concepticon1;
		}
		set
		{
			if ((this._Concepticon1 != value))
			{
				if (this._ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticon1Changing(value);
				this.SendPropertyChanging();
				this._Concepticon1 = value;
				this.SendPropertyChanged("Concepticon1");
				this.OnConcepticon1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepticon2", DbType="Int NOT NULL")]
	public int Concepticon2
	{
		get
		{
			return this._Concepticon2;
		}
		set
		{
			if ((this._Concepticon2 != value))
			{
				if (this._Concepticon2ConcepticonTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcepticon2Changing(value);
				this.SendPropertyChanging();
				this._Concepticon2 = value;
				this.SendPropertyChanged("Concepticon2");
				this.OnConcepticon2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Int NOT NULL")]
	public int Strength
	{
		get
		{
			return this._Strength;
		}
		set
		{
			if ((this._Strength != value))
			{
				this.OnStrengthChanging(value);
				this.SendPropertyChanging();
				this._Strength = value;
				this.SendPropertyChanged("Strength");
				this.OnStrengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Walks", DbType="Int NOT NULL")]
	public int Walks
	{
		get
		{
			return this._Walks;
		}
		set
		{
			if ((this._Walks != value))
			{
				this.OnWalksChanging(value);
				this.SendPropertyChanging();
				this._Walks = value;
				this.SendPropertyChanged("Walks");
				this.OnWalksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Randomwal__Conce__7AF13DF7", Storage="_ConcepticonTable", ThisKey="Concepticon1", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable ConcepticonTable
	{
		get
		{
			return this._ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ConcepticonTable.Entity = null;
					previousValue.RandomwalkLink.Remove(this);
				}
				this._ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value.RandomwalkLink.Add(this);
					this._Concepticon1 = value.ID;
				}
				else
				{
					this._Concepticon1 = default(int);
				}
				this.SendPropertyChanged("ConcepticonTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Randomwal__Conce__7BE56230", Storage="_Concepticon2ConcepticonTable", ThisKey="Concepticon2", OtherKey="ID", IsForeignKey=true)]
	public ConcepticonTable Concepticon2ConcepticonTable
	{
		get
		{
			return this._Concepticon2ConcepticonTable.Entity;
		}
		set
		{
			ConcepticonTable previousValue = this._Concepticon2ConcepticonTable.Entity;
			if (((previousValue != value) 
						|| (this._Concepticon2ConcepticonTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Concepticon2ConcepticonTable.Entity = null;
					previousValue._Randomwal__Conce__7BE56230.Remove(this);
				}
				this._Concepticon2ConcepticonTable.Entity = value;
				if ((value != null))
				{
					value._Randomwal__Conce__7BE56230.Add(this);
					this._Concepticon2 = value.ID;
				}
				else
				{
					this._Concepticon2 = default(int);
				}
				this.SendPropertyChanged("Concepticon2ConcepticonTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SourceTable")]
public partial class SourceTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Dataset_ID;
	
	private string _ID;
	
	private string _Bibtex_type;
	
	private string _Address;
	
	private string _Annote;
	
	private string _Author;
	
	private string _Booktitle;
	
	private string _Chapter;
	
	private string _Crossref;
	
	private string _Edition;
	
	private string _Editor;
	
	private string _Eprint;
	
	private string _Howpublished;
	
	private string _Institution;
	
	private string _Journal;
	
	private string _Key;
	
	private string _Month;
	
	private string _Note;
	
	private string _Number;
	
	private string _Organization;
	
	private string _Pages;
	
	private string _Publisher;
	
	private string _School;
	
	private string _Series;
	
	private string _Title;
	
	private string _Type;
	
	private string _Url;
	
	private string _Volume;
	
	private string _Year;
	
	private string _Extra;
	
	private EntityRef<Dataset> _Dataset;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBibtex_typeChanging(string value);
    partial void OnBibtex_typeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAnnoteChanging(string value);
    partial void OnAnnoteChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnBooktitleChanging(string value);
    partial void OnBooktitleChanged();
    partial void OnChapterChanging(string value);
    partial void OnChapterChanged();
    partial void OnCrossrefChanging(string value);
    partial void OnCrossrefChanged();
    partial void OnEditionChanging(string value);
    partial void OnEditionChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnEprintChanging(string value);
    partial void OnEprintChanged();
    partial void OnHowpublishedChanging(string value);
    partial void OnHowpublishedChanged();
    partial void OnInstitutionChanging(string value);
    partial void OnInstitutionChanged();
    partial void OnJournalChanging(string value);
    partial void OnJournalChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnPagesChanging(string value);
    partial void OnPagesChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnSchoolChanging(string value);
    partial void OnSchoolChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnExtraChanging(string value);
    partial void OnExtraChanged();
    #endregion
	
	public SourceTable()
	{
		this._Dataset = default(EntityRef<Dataset>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bibtex_type", Storage="_Bibtex_type", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Bibtex_type
	{
		get
		{
			return this._Bibtex_type;
		}
		set
		{
			if ((this._Bibtex_type != value))
			{
				this.OnBibtex_typeChanging(value);
				this.SendPropertyChanging();
				this._Bibtex_type = value;
				this.SendPropertyChanged("Bibtex_type");
				this.OnBibtex_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address", Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="annote", Storage="_Annote", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Annote
	{
		get
		{
			return this._Annote;
		}
		set
		{
			if ((this._Annote != value))
			{
				this.OnAnnoteChanging(value);
				this.SendPropertyChanging();
				this._Annote = value;
				this.SendPropertyChanged("Annote");
				this.OnAnnoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="author", Storage="_Author", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="booktitle", Storage="_Booktitle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Booktitle
	{
		get
		{
			return this._Booktitle;
		}
		set
		{
			if ((this._Booktitle != value))
			{
				this.OnBooktitleChanging(value);
				this.SendPropertyChanging();
				this._Booktitle = value;
				this.SendPropertyChanged("Booktitle");
				this.OnBooktitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chapter", Storage="_Chapter", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Chapter
	{
		get
		{
			return this._Chapter;
		}
		set
		{
			if ((this._Chapter != value))
			{
				this.OnChapterChanging(value);
				this.SendPropertyChanging();
				this._Chapter = value;
				this.SendPropertyChanged("Chapter");
				this.OnChapterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="crossref", Storage="_Crossref", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Crossref
	{
		get
		{
			return this._Crossref;
		}
		set
		{
			if ((this._Crossref != value))
			{
				this.OnCrossrefChanging(value);
				this.SendPropertyChanging();
				this._Crossref = value;
				this.SendPropertyChanged("Crossref");
				this.OnCrossrefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="edition", Storage="_Edition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Edition
	{
		get
		{
			return this._Edition;
		}
		set
		{
			if ((this._Edition != value))
			{
				this.OnEditionChanging(value);
				this.SendPropertyChanging();
				this._Edition = value;
				this.SendPropertyChanged("Edition");
				this.OnEditionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="editor", Storage="_Editor", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Editor
	{
		get
		{
			return this._Editor;
		}
		set
		{
			if ((this._Editor != value))
			{
				this.OnEditorChanging(value);
				this.SendPropertyChanging();
				this._Editor = value;
				this.SendPropertyChanged("Editor");
				this.OnEditorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eprint", Storage="_Eprint", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Eprint
	{
		get
		{
			return this._Eprint;
		}
		set
		{
			if ((this._Eprint != value))
			{
				this.OnEprintChanging(value);
				this.SendPropertyChanging();
				this._Eprint = value;
				this.SendPropertyChanged("Eprint");
				this.OnEprintChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="howpublished", Storage="_Howpublished", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Howpublished
	{
		get
		{
			return this._Howpublished;
		}
		set
		{
			if ((this._Howpublished != value))
			{
				this.OnHowpublishedChanging(value);
				this.SendPropertyChanging();
				this._Howpublished = value;
				this.SendPropertyChanged("Howpublished");
				this.OnHowpublishedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="institution", Storage="_Institution", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Institution
	{
		get
		{
			return this._Institution;
		}
		set
		{
			if ((this._Institution != value))
			{
				this.OnInstitutionChanging(value);
				this.SendPropertyChanging();
				this._Institution = value;
				this.SendPropertyChanged("Institution");
				this.OnInstitutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="journal", Storage="_Journal", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Journal
	{
		get
		{
			return this._Journal;
		}
		set
		{
			if ((this._Journal != value))
			{
				this.OnJournalChanging(value);
				this.SendPropertyChanging();
				this._Journal = value;
				this.SendPropertyChanged("Journal");
				this.OnJournalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="key", Storage="_Key", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Key
	{
		get
		{
			return this._Key;
		}
		set
		{
			if ((this._Key != value))
			{
				this.OnKeyChanging(value);
				this.SendPropertyChanging();
				this._Key = value;
				this.SendPropertyChanged("Key");
				this.OnKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="month", Storage="_Month", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Month
	{
		get
		{
			return this._Month;
		}
		set
		{
			if ((this._Month != value))
			{
				this.OnMonthChanging(value);
				this.SendPropertyChanging();
				this._Month = value;
				this.SendPropertyChanged("Month");
				this.OnMonthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="note", Storage="_Note", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="number", Storage="_Number", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="organization", Storage="_Organization", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Organization
	{
		get
		{
			return this._Organization;
		}
		set
		{
			if ((this._Organization != value))
			{
				this.OnOrganizationChanging(value);
				this.SendPropertyChanging();
				this._Organization = value;
				this.SendPropertyChanged("Organization");
				this.OnOrganizationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pages", Storage="_Pages", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			if ((this._Pages != value))
			{
				this.OnPagesChanging(value);
				this.SendPropertyChanging();
				this._Pages = value;
				this.SendPropertyChanged("Pages");
				this.OnPagesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisher", Storage="_Publisher", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="school", Storage="_School", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string School
	{
		get
		{
			return this._School;
		}
		set
		{
			if ((this._School != value))
			{
				this.OnSchoolChanging(value);
				this.SendPropertyChanging();
				this._School = value;
				this.SendPropertyChanged("School");
				this.OnSchoolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="series", Storage="_Series", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Series
	{
		get
		{
			return this._Series;
		}
		set
		{
			if ((this._Series != value))
			{
				this.OnSeriesChanging(value);
				this.SendPropertyChanging();
				this._Series = value;
				this.SendPropertyChanged("Series");
				this.OnSeriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_Title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="type", Storage="_Type", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url", Storage="_Url", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="volume", Storage="_Volume", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Volume
	{
		get
		{
			return this._Volume;
		}
		set
		{
			if ((this._Volume != value))
			{
				this.OnVolumeChanging(value);
				this.SendPropertyChanging();
				this._Volume = value;
				this.SendPropertyChanged("Volume");
				this.OnVolumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="year", Storage="_Year", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="extra", Storage="_Extra", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Extra
	{
		get
		{
			return this._Extra;
		}
		set
		{
			if ((this._Extra != value))
			{
				this.OnExtraChanging(value);
				this.SendPropertyChanging();
				this._Extra = value;
				this.SendPropertyChanged("Extra");
				this.OnExtraChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__SourceTab__datas__15DA3E5D", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.SourceTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.SourceTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValueSource")]
public partial class ValueSource
{
	
	private string _Value_ID;
	
	private string _Source_ID;
	
	private string _Context;
	
	private string _Dataset_ID;
	
	public ValueSource()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value_ID", DbType="NVarChar(100)")]
	public string Value_ID
	{
		get
		{
			return this._Value_ID;
		}
		set
		{
			if ((this._Value_ID != value))
			{
				this._Value_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_ID", DbType="NVarChar(100)")]
	public string Source_ID
	{
		get
		{
			return this._Source_ID;
		}
		set
		{
			if ((this._Source_ID != value))
			{
				this._Source_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Context
	{
		get
		{
			return this._Context;
		}
		set
		{
			if ((this._Context != value))
			{
				this._Context = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this._Dataset_ID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ValueTable")]
public partial class ValueTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ID;
	
	private string _Lect_ID;
	
	private string _Concept_ID;
	
	private string _Form_according_to_Source;
	
	private string _Comment;
	
	private string _Dataset_ID;
	
	private EntityRef<Dataset> _Dataset;
	
	private EntityRef<LanguageTable> _LanguageTable;
	
	private EntityRef<ParameterTable> _ParameterTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnLect_IDChanging(string value);
    partial void OnLect_IDChanged();
    partial void OnConcept_IDChanging(string value);
    partial void OnConcept_IDChanged();
    partial void OnForm_according_to_SourceChanging(string value);
    partial void OnForm_according_to_SourceChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDataset_IDChanging(string value);
    partial void OnDataset_IDChanged();
    #endregion
	
	public ValueTable()
	{
		this._Dataset = default(EntityRef<Dataset>);
		this._LanguageTable = default(EntityRef<LanguageTable>);
		this._ParameterTable = default(EntityRef<ParameterTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lect_ID", DbType="NVarChar(100)")]
	public string Lect_ID
	{
		get
		{
			return this._Lect_ID;
		}
		set
		{
			if ((this._Lect_ID != value))
			{
				if (this._LanguageTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLect_IDChanging(value);
				this.SendPropertyChanging();
				this._Lect_ID = value;
				this.SendPropertyChanged("Lect_ID");
				this.OnLect_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concept_ID", DbType="NVarChar(100)")]
	public string Concept_ID
	{
		get
		{
			return this._Concept_ID;
		}
		set
		{
			if ((this._Concept_ID != value))
			{
				if (this._ParameterTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConcept_IDChanging(value);
				this.SendPropertyChanging();
				this._Concept_ID = value;
				this.SendPropertyChanged("Concept_ID");
				this.OnConcept_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_according_to_Source", DbType="NVarChar(100)")]
	public string Form_according_to_Source
	{
		get
		{
			return this._Form_according_to_Source;
		}
		set
		{
			if ((this._Form_according_to_Source != value))
			{
				this.OnForm_according_to_SourceChanging(value);
				this.SendPropertyChanging();
				this._Form_according_to_Source = value;
				this.SendPropertyChanged("Form_according_to_Source");
				this.OnForm_according_to_SourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dataset_ID", Storage="_Dataset_ID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Dataset_ID
	{
		get
		{
			return this._Dataset_ID;
		}
		set
		{
			if ((this._Dataset_ID != value))
			{
				this.OnDataset_IDChanging(value);
				this.SendPropertyChanging();
				this._Dataset_ID = value;
				this.SendPropertyChanged("Dataset_ID");
				this.OnDataset_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTabl__datas__336AA144", Storage="_Dataset", ThisKey="Dataset_ID", OtherKey="ID", IsForeignKey=true)]
	public Dataset Dataset
	{
		get
		{
			return this._Dataset.Entity;
		}
		set
		{
			Dataset previousValue = this._Dataset.Entity;
			if (((previousValue != value) 
						|| (this._Dataset.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Dataset.Entity = null;
					previousValue.ValueTable.Remove(this);
				}
				this._Dataset.Entity = value;
				if ((value != null))
				{
					value.ValueTable.Add(this);
					this._Dataset_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
				}
				this.SendPropertyChanged("Dataset");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTable__345EC57D", Storage="_LanguageTable", ThisKey="Dataset_ID,Lect_ID", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public LanguageTable LanguageTable
	{
		get
		{
			return this._LanguageTable.Entity;
		}
		set
		{
			LanguageTable previousValue = this._LanguageTable.Entity;
			if (((previousValue != value) 
						|| (this._LanguageTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LanguageTable.Entity = null;
					previousValue.ValueTable.Remove(this);
				}
				this._LanguageTable.Entity = value;
				if ((value != null))
				{
					value.ValueTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Lect_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Lect_ID = default(string);
				}
				this.SendPropertyChanged("LanguageTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ValueTable__3552E9B6", Storage="_ParameterTable", ThisKey="Dataset_ID,Concept_ID", OtherKey="Dataset_ID,ID", IsForeignKey=true)]
	public ParameterTable ParameterTable
	{
		get
		{
			return this._ParameterTable.Entity;
		}
		set
		{
			ParameterTable previousValue = this._ParameterTable.Entity;
			if (((previousValue != value) 
						|| (this._ParameterTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ParameterTable.Entity = null;
					previousValue.ValueTable.Remove(this);
				}
				this._ParameterTable.Entity = value;
				if ((value != null))
				{
					value.ValueTable.Add(this);
					this._Dataset_ID = value.Dataset_ID;
					this._Concept_ID = value.ID;
				}
				else
				{
					this._Dataset_ID = default(string);
					this._Concept_ID = default(string);
				}
				this.SendPropertyChanged("ParameterTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
